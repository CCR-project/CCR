### Starting build.
# Target: test.ml.depends, tags: { extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules test.ml > test.ml.depends
# Target: AST.mli.depends, tags: { extension:mli, file:AST.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules AST.mli > AST.mli.depends
# Target: Archi.mli.depends, tags: { extension:mli, file:Archi.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Archi.mli > Archi.mli.depends
# Target: BinNums.mli.depends, tags: { extension:mli, file:BinNums.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinNums.mli > BinNums.mli.depends
# Target: Datatypes.mli.depends, tags: { extension:mli, file:Datatypes.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Datatypes.mli > Datatypes.mli.depends
# Target: BinNums.cmi, tags: { byte, compile, extension:mli, file:BinNums.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinNums.cmi BinNums.mli
# Target: Datatypes.cmi, tags: { byte, compile, extension:mli, file:Datatypes.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Datatypes.cmi Datatypes.mli
# Target: BinInt.mli.depends, tags: { extension:mli, file:BinInt.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinInt.mli > BinInt.mli.depends
# Target: BinNat.mli.depends, tags: { extension:mli, file:BinNat.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinNat.mli > BinNat.mli.depends
# Target: BinPos.mli.depends, tags: { extension:mli, file:BinPos.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinPos.mli > BinPos.mli.depends
# Target: BinPosDef.mli.depends, tags: { extension:mli, file:BinPosDef.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinPosDef.mli > BinPosDef.mli.depends
# Target: Nat.mli.depends, tags: { extension:mli, file:Nat.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Nat.mli > Nat.mli.depends
# Target: BinPosDef.cmi, tags: { byte, compile, extension:mli, file:BinPosDef.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinPosDef.cmi BinPosDef.mli
# Target: Nat.cmi, tags: { byte, compile, extension:mli, file:Nat.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Nat.cmi Nat.mli
# Target: BinPos.cmi, tags: { byte, compile, extension:mli, file:BinPos.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinPos.cmi BinPos.mli
# Target: BinNat.cmi, tags: { byte, compile, extension:mli, file:BinNat.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinNat.cmi BinNat.mli
# Target: Bool.mli.depends, tags: { extension:mli, file:Bool.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bool.mli > Bool.mli.depends
# Target: Coqlib.mli.depends, tags: { extension:mli, file:Coqlib.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Coqlib.mli > Coqlib.mli.depends
# Target: BinInt.cmi, tags: { byte, compile, extension:mli, file:BinInt.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinInt.cmi BinInt.mli
# Target: List0.mli.depends, tags: { extension:mli, file:List0.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules List0.mli > List0.mli.depends
# Target: ZArith_dec.mli.depends, tags: { extension:mli, file:ZArith_dec.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ZArith_dec.mli > ZArith_dec.mli.depends
# Target: List0.cmi, tags: { byte, compile, extension:mli, file:List0.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o List0.cmi List0.mli
# Target: ZArith_dec.cmi, tags: { byte, compile, extension:mli, file:ZArith_dec.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ZArith_dec.cmi ZArith_dec.mli
# Target: Errors.mli.depends, tags: { extension:mli, file:Errors.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Errors.mli > Errors.mli.depends
# Target: Floats.mli.depends, tags: { extension:mli, file:Floats.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Floats.mli > Floats.mli.depends
# Target: Archi.cmi, tags: { byte, compile, extension:mli, file:Archi.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Archi.cmi Archi.mli
# Target: Binary.mli.depends, tags: { extension:mli, file:Binary.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Binary.mli > Binary.mli.depends
# Target: Bool.cmi, tags: { byte, compile, extension:mli, file:Bool.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bool.cmi Bool.mli
# Target: Bracket.mli.depends, tags: { extension:mli, file:Bracket.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bracket.mli > Bracket.mli.depends
# Target: SpecFloat.mli.depends, tags: { extension:mli, file:SpecFloat.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SpecFloat.mli > SpecFloat.mli.depends
# Target: Zbool.mli.depends, tags: { extension:mli, file:Zbool.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zbool.mli > Zbool.mli.depends
# Target: SpecFloat.cmi, tags: { byte, compile, extension:mli, file:SpecFloat.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SpecFloat.cmi SpecFloat.mli
# Target: Zbool.cmi, tags: { byte, compile, extension:mli, file:Zbool.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zbool.cmi Zbool.mli
# Target: FLT.mli.depends, tags: { extension:mli, file:FLT.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FLT.mli > FLT.mli.depends
# Target: Round.mli.depends, tags: { extension:mli, file:Round.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Round.mli > Round.mli.depends
# Target: Zaux.mli.depends, tags: { extension:mli, file:Zaux.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zaux.mli > Zaux.mli.depends
# Target: Zpower.mli.depends, tags: { extension:mli, file:Zpower.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zpower.mli > Zpower.mli.depends
# Target: Bracket.cmi, tags: { byte, compile, extension:mli, file:Bracket.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bracket.cmi Bracket.mli
# Target: FLT.cmi, tags: { byte, compile, extension:mli, file:FLT.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FLT.cmi FLT.mli
# Target: Round.cmi, tags: { byte, compile, extension:mli, file:Round.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Round.cmi Round.mli
# Target: Zaux.cmi, tags: { byte, compile, extension:mli, file:Zaux.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zaux.cmi Zaux.mli
# Target: Zpower.cmi, tags: { byte, compile, extension:mli, file:Zpower.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zpower.cmi Zpower.mli
# Target: Bits.mli.depends, tags: { extension:mli, file:Bits.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bits.mli > Bits.mli.depends
# Target: Binary.cmi, tags: { byte, compile, extension:mli, file:Binary.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Binary.cmi Binary.mli
# Target: Coqlib.cmi, tags: { byte, compile, extension:mli, file:Coqlib.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Coqlib.cmi Coqlib.mli
# Target: IEEE754_extra.mli.depends, tags: { extension:mli, file:IEEE754_extra.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules IEEE754_extra.mli > IEEE754_extra.mli.depends
# Target: Integers.mli.depends, tags: { extension:mli, file:Integers.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Integers.mli > Integers.mli.depends
# Target: Zbits.mli.depends, tags: { extension:mli, file:Zbits.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zbits.mli > Zbits.mli.depends
# Target: Zbits.cmi, tags: { byte, compile, extension:mli, file:Zbits.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zbits.cmi Zbits.mli
# Target: Bits.cmi, tags: { byte, compile, extension:mli, file:Bits.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bits.cmi Bits.mli
# Target: IEEE754_extra.cmi, tags: { byte, compile, extension:mli, file:IEEE754_extra.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o IEEE754_extra.cmi IEEE754_extra.mli
# Target: Integers.cmi, tags: { byte, compile, extension:mli, file:Integers.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Integers.cmi Integers.mli
# Target: Maps.mli.depends, tags: { extension:mli, file:Maps.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Maps.mli > Maps.mli.depends
# Target: EquivDec.mli.depends, tags: { extension:mli, file:EquivDec.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules EquivDec.mli > EquivDec.mli.depends
# Target: EquivDec.cmi, tags: { byte, compile, extension:mli, file:EquivDec.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o EquivDec.cmi EquivDec.mli
# Target: String0.mli.depends, tags: { extension:mli, file:String0.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules String0.mli > String0.mli.depends
# Target: Errors.cmi, tags: { byte, compile, extension:mli, file:Errors.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Errors.cmi Errors.mli
# Target: Floats.cmi, tags: { byte, compile, extension:mli, file:Floats.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Floats.cmi Floats.mli
# Target: Maps.cmi, tags: { byte, compile, extension:mli, file:Maps.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Maps.cmi Maps.mli
# Target: String0.cmi, tags: { byte, compile, extension:mli, file:String0.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o String0.cmi String0.mli
# Target: CompCert/x86/Asmexpand.ml.depends, tags: { extension:ml, file:CompCert/x86/Asmexpand.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/x86/Asmexpand.ml > CompCert/x86/Asmexpand.ml.depends
# Target: AST.cmi, tags: { byte, compile, extension:mli, file:AST.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o AST.cmi AST.mli
# Target: Asm.mli.depends, tags: { extension:mli, file:Asm.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Asm.mli > Asm.mli.depends
# Target: Machregs.mli.depends, tags: { extension:mli, file:Machregs.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Machregs.mli > Machregs.mli.depends
# Target: Op.mli.depends, tags: { extension:mli, file:Op.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Op.mli > Op.mli.depends
# Target: BoolEqual.mli.depends, tags: { extension:mli, file:BoolEqual.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BoolEqual.mli > BoolEqual.mli.depends
# Target: BoolEqual.cmi, tags: { byte, compile, extension:mli, file:BoolEqual.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BoolEqual.cmi BoolEqual.mli
# Target: Op.cmi, tags: { byte, compile, extension:mli, file:Op.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Op.cmi Op.mli
# Target: Machregs.cmi, tags: { byte, compile, extension:mli, file:Machregs.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Machregs.cmi Machregs.mli
# Target: CompCert/backend/Asmexpandaux.mli.depends, tags: { extension:mli, file:CompCert/backend/Asmexpandaux.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Asmexpandaux.mli > CompCert/backend/Asmexpandaux.mli.depends
# Target: Asm.cmi, tags: { byte, compile, extension:mli, file:Asm.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Asm.cmi Asm.mli
# Target: Asmgen.mli.depends, tags: { extension:mli, file:Asmgen.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Asmgen.mli > Asmgen.mli.depends
# Target: Mach.mli.depends, tags: { extension:mli, file:Mach.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Mach.mli > Mach.mli.depends
# Target: Mach.cmi, tags: { byte, compile, extension:mli, file:Mach.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Mach.cmi Mach.mli
# Target: CompCert/lib/Camlcoq.ml.depends, tags: { extension:ml, file:CompCert/lib/Camlcoq.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Camlcoq.ml > CompCert/lib/Camlcoq.ml.depends
# Target: CompCert/driver/Clflags.ml.depends, tags: { extension:ml, file:CompCert/driver/Clflags.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Clflags.ml > CompCert/driver/Clflags.ml.depends
# Target: CompCert/driver/Configuration.mli.depends, tags: { extension:mli, file:CompCert/driver/Configuration.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Configuration.mli > CompCert/driver/Configuration.mli.depends
# Target: CompCert/driver/Configuration.cmi, tags: { byte, compile, extension:mli, file:CompCert/driver/Configuration.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Configuration.cmi CompCert/driver/Configuration.mli
# Target: Conventions.mli.depends, tags: { extension:mli, file:Conventions.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Conventions.mli > Conventions.mli.depends
# Target: Conventions1.mli.depends, tags: { extension:mli, file:Conventions1.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Conventions1.mli > Conventions1.mli.depends
# Target: Locations.mli.depends, tags: { extension:mli, file:Locations.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Locations.mli > Locations.mli.depends
# Target: Ordered.mli.depends, tags: { extension:mli, file:Ordered.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ordered.mli > Ordered.mli.depends
# Target: OrderedType.mli.depends, tags: { extension:mli, file:OrderedType.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrderedType.mli > OrderedType.mli.depends
# Target: OrderedType.cmi, tags: { byte, compile, extension:mli, file:OrderedType.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrderedType.cmi OrderedType.mli
# Target: Ordered.cmi, tags: { byte, compile, extension:mli, file:Ordered.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ordered.cmi Ordered.mli
# Target: Locations.cmi, tags: { byte, compile, extension:mli, file:Locations.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Locations.cmi Locations.mli
# Target: Conventions1.cmi, tags: { byte, compile, extension:mli, file:Conventions1.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Conventions1.cmi Conventions1.mli
# Target: CompCert/backend/PrintAsmaux.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintAsmaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintAsmaux.ml > CompCert/backend/PrintAsmaux.ml.depends
# Target: CompCert/lib/Camlcoq.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/lib/Camlcoq.cmo, file:CompCert/lib/Camlcoq.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Camlcoq.cmo CompCert/lib/Camlcoq.ml
# Target: CompCert/driver/Clflags.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/driver/Clflags.cmo, file:CompCert/driver/Clflags.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Clflags.cmo CompCert/driver/Clflags.ml
# Target: CompCert/lib/Commandline.mli.depends, tags: { extension:mli, file:CompCert/lib/Commandline.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Commandline.mli > CompCert/lib/Commandline.mli.depends
# Target: Memdata.mli.depends, tags: { extension:mli, file:Memdata.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Memdata.mli > Memdata.mli.depends
# Target: PeanoNat.mli.depends, tags: { extension:mli, file:PeanoNat.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules PeanoNat.mli > PeanoNat.mli.depends
# Target: Values.mli.depends, tags: { extension:mli, file:Values.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Values.mli > Values.mli.depends
# Target: PeanoNat.cmi, tags: { byte, compile, extension:mli, file:PeanoNat.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o PeanoNat.cmi PeanoNat.mli
# Target: Values.cmi, tags: { byte, compile, extension:mli, file:Values.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Values.cmi Values.mli
# Target: CompCert/common/Sections.mli.depends, tags: { extension:mli, file:CompCert/common/Sections.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/common/Sections.mli > CompCert/common/Sections.mli.depends
# Target: CompCert/cparser/C.mli.depends, tags: { extension:mli, file:CompCert/cparser/C.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/C.mli > CompCert/cparser/C.mli.depends
# Target: CompCert/cparser/Env.mli.depends, tags: { extension:mli, file:CompCert/cparser/Env.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Env.mli > CompCert/cparser/Env.mli.depends
# Target: CompCert/cparser/C.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/C.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/C.cmi CompCert/cparser/C.mli
# Target: CompCert/cparser/Env.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/Env.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Env.cmi CompCert/cparser/Env.mli
# Target: CompCert/driver/Version.ml.depends, tags: { extension:ml, file:CompCert/driver/Version.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Version.ml > CompCert/driver/Version.ml.depends
# Target: CompCert/lib/Commandline.cmi, tags: { byte, compile, extension:mli, file:CompCert/lib/Commandline.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Commandline.cmi CompCert/lib/Commandline.mli
# Target: Memdata.cmi, tags: { byte, compile, extension:mli, file:Memdata.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Memdata.cmi Memdata.mli
# Target: CompCert/common/Sections.cmi, tags: { byte, compile, extension:mli, file:CompCert/common/Sections.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/common -I CompCert/driver -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/common/Sections.cmi CompCert/common/Sections.mli
# Target: CompCert/driver/Version.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/driver/Version.cmo, file:CompCert/driver/Version.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Version.cmo CompCert/driver/Version.ml
# Target: CompCert/backend/Asmexpandaux.cmi, tags: { byte, compile, extension:mli, file:CompCert/backend/Asmexpandaux.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Asmexpandaux.cmi CompCert/backend/Asmexpandaux.mli
# Target: Asmgen.cmi, tags: { byte, compile, extension:mli, file:Asmgen.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Asmgen.cmi Asmgen.mli
# Target: Conventions.cmi, tags: { byte, compile, extension:mli, file:Conventions.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Conventions.cmi Conventions.mli
# Target: CompCert/backend/PrintAsmaux.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/PrintAsmaux.cmo, file:CompCert/backend/PrintAsmaux.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintAsmaux.cmo CompCert/backend/PrintAsmaux.ml
# Target: CompCert/cfrontend/C2C.ml.depends, tags: { extension:ml, file:CompCert/cfrontend/C2C.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cfrontend/C2C.ml > CompCert/cfrontend/C2C.ml.depends
# Target: CompCert/backend/AisAnnot.mli.depends, tags: { extension:mli, file:CompCert/backend/AisAnnot.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/AisAnnot.mli > CompCert/backend/AisAnnot.mli.depends
# Target: CompCert/x86/CBuiltins.ml.depends, tags: { extension:ml, file:CompCert/x86/CBuiltins.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/x86/CBuiltins.ml > CompCert/x86/CBuiltins.ml.depends
# Target: CompCert/cparser/Ceval.mli.depends, tags: { extension:mli, file:CompCert/cparser/Ceval.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Ceval.mli > CompCert/cparser/Ceval.mli.depends
# Target: Cop.mli.depends, tags: { extension:mli, file:Cop.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cop.mli > Cop.mli.depends
# Target: Ctypes.mli.depends, tags: { extension:mli, file:Ctypes.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ctypes.mli > Ctypes.mli.depends
# Target: Memory.mli.depends, tags: { extension:mli, file:Memory.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Memory.mli > Memory.mli.depends
# Target: Memtype.mli.depends, tags: { extension:mli, file:Memtype.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Memtype.mli > Memtype.mli.depends
# Target: Znumtheory.mli.depends, tags: { extension:mli, file:Znumtheory.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Znumtheory.mli > Znumtheory.mli.depends
# Target: Memtype.cmi, tags: { byte, compile, extension:mli, file:Memtype.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Memtype.cmi Memtype.mli
# Target: Znumtheory.cmi, tags: { byte, compile, extension:mli, file:Znumtheory.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Znumtheory.cmi Znumtheory.mli
# Target: Ctypes.cmi, tags: { byte, compile, extension:mli, file:Ctypes.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ctypes.cmi Ctypes.mli
# Target: Memory.cmi, tags: { byte, compile, extension:mli, file:Memory.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Memory.cmi Memory.mli
# Target: CompCert/cparser/Cprint.mli.depends, tags: { extension:mli, file:CompCert/cparser/Cprint.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Cprint.mli > CompCert/cparser/Cprint.mli.depends
# Target: Csyntax.mli.depends, tags: { extension:mli, file:Csyntax.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Csyntax.mli > Csyntax.mli.depends
# Target: Cop.cmi, tags: { byte, compile, extension:mli, file:Cop.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cop.cmi Cop.mli
# Target: Ctyping.mli.depends, tags: { extension:mli, file:Ctyping.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ctyping.mli > Ctyping.mli.depends
# Target: Csyntax.cmi, tags: { byte, compile, extension:mli, file:Csyntax.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Csyntax.cmi Csyntax.mli
# Target: Ring.mli.depends, tags: { extension:mli, file:Ring.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ring.mli > Ring.mli.depends
# Target: Ring.cmi, tags: { byte, compile, extension:mli, file:Ring.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ring.cmi Ring.mli
# Target: CompCert/cparser/Cutil.mli.depends, tags: { extension:mli, file:CompCert/cparser/Cutil.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Cutil.mli > CompCert/cparser/Cutil.mli.depends
# Target: CompCert/debug/Debug.mli.depends, tags: { extension:mli, file:CompCert/debug/Debug.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/debug/Debug.mli > CompCert/debug/Debug.mli.depends
# Target: CompCert/debug/DwarfTypes.mli.depends, tags: { extension:mli, file:CompCert/debug/DwarfTypes.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/debug/DwarfTypes.mli > CompCert/debug/DwarfTypes.mli.depends
# Target: CompCert/debug/DwarfTypes.cmi, tags: { byte, compile, extension:mli, file:CompCert/debug/DwarfTypes.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/DwarfTypes.cmi CompCert/debug/DwarfTypes.mli
# Target: CompCert/cparser/Diagnostics.mli.depends, tags: { extension:mli, file:CompCert/cparser/Diagnostics.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Diagnostics.mli > CompCert/cparser/Diagnostics.mli.depends
# Target: CompCert/cparser/ExtendedAsm.ml.depends, tags: { extension:ml, file:CompCert/cparser/ExtendedAsm.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/ExtendedAsm.ml > CompCert/cparser/ExtendedAsm.ml.depends
# Target: CompCert/x86/CBuiltins.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/x86/CBuiltins.cmo, file:CompCert/x86/CBuiltins.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/CBuiltins.cmo CompCert/x86/CBuiltins.ml
# Target: CompCert/cparser/Ceval.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/Ceval.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Ceval.cmi CompCert/cparser/Ceval.mli
# Target: CompCert/cparser/Cutil.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/Cutil.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Cutil.cmi CompCert/cparser/Cutil.mli
# Target: CompCert/cparser/Diagnostics.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/Diagnostics.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Diagnostics.cmi CompCert/cparser/Diagnostics.mli
# Target: CompCert/cparser/Machine.mli.depends, tags: { extension:mli, file:CompCert/cparser/Machine.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Machine.mli > CompCert/cparser/Machine.mli.depends
# Target: CompCert/x86/Machregsaux.mli.depends, tags: { extension:mli, file:CompCert/x86/Machregsaux.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/x86/Machregsaux.mli > CompCert/x86/Machregsaux.mli.depends
# Target: CompCert/backend/Machregsnames.mli.depends, tags: { extension:mli, file:CompCert/backend/Machregsnames.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Machregsnames.mli > CompCert/backend/Machregsnames.mli.depends
# Target: CompCert/cparser/Machine.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/Machine.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Machine.cmi CompCert/cparser/Machine.mli
# Target: CompCert/x86/Machregsaux.cmi, tags: { byte, compile, extension:mli, file:CompCert/x86/Machregsaux.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/Machregsaux.cmi CompCert/x86/Machregsaux.mli
# Target: CompCert/backend/Machregsnames.cmi, tags: { byte, compile, extension:mli, file:CompCert/backend/Machregsnames.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Machregsnames.cmi CompCert/backend/Machregsnames.mli
# Target: Initializers.mli.depends, tags: { extension:mli, file:Initializers.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Initializers.mli > Initializers.mli.depends
# Target: CompCert/backend/AisAnnot.cmi, tags: { byte, compile, extension:mli, file:CompCert/backend/AisAnnot.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/AisAnnot.cmi CompCert/backend/AisAnnot.mli
# Target: CompCert/cparser/Cprint.cmi, tags: { byte, compile, extension:mli, file:CompCert/cparser/Cprint.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Cprint.cmi CompCert/cparser/Cprint.mli
# Target: Ctyping.cmi, tags: { byte, compile, extension:mli, file:Ctyping.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ctyping.cmi Ctyping.mli
# Target: CompCert/debug/Debug.cmi, tags: { byte, compile, extension:mli, file:CompCert/debug/Debug.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/Debug.cmi CompCert/debug/Debug.mli
# Target: CompCert/cparser/ExtendedAsm.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/cparser/ExtendedAsm.cmo, file:CompCert/cparser/ExtendedAsm.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/ExtendedAsm.cmo CompCert/cparser/ExtendedAsm.ml
# Target: Initializers.cmi, tags: { byte, compile, extension:mli, file:Initializers.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Initializers.cmi Initializers.mli
# Target: Compiler.mli.depends, tags: { extension:mli, file:Compiler.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Compiler.mli > Compiler.mli.depends
# Target: Allocation.mli.depends, tags: { extension:mli, file:Allocation.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Allocation.mli > Allocation.mli.depends
# Target: FSetAVLplus.mli.depends, tags: { extension:mli, file:FSetAVLplus.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FSetAVLplus.mli > FSetAVLplus.mli.depends
# Target: Int0.mli.depends, tags: { extension:mli, file:Int0.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Int0.mli > Int0.mli.depends
# Target: MSetAVL.mli.depends, tags: { extension:mli, file:MSetAVL.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules MSetAVL.mli > MSetAVL.mli.depends
# Target: Int0.cmi, tags: { byte, compile, extension:mli, file:Int0.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Int0.cmi Int0.mli
# Target: MSetInterface.mli.depends, tags: { extension:mli, file:MSetInterface.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules MSetInterface.mli > MSetInterface.mli.depends
# Target: Orders.mli.depends, tags: { extension:mli, file:Orders.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Orders.mli > Orders.mli.depends
# Target: OrdersFacts.mli.depends, tags: { extension:mli, file:OrdersFacts.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrdersFacts.mli > OrdersFacts.mli.depends
# Target: Orders.cmi, tags: { byte, compile, extension:mli, file:Orders.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Orders.cmi Orders.mli
# Target: OrdersTac.mli.depends, tags: { extension:mli, file:OrdersTac.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrdersTac.mli > OrdersTac.mli.depends
# Target: OrdersTac.cmi, tags: { byte, compile, extension:mli, file:OrdersTac.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrdersTac.cmi OrdersTac.mli
# Target: OrdersFacts.cmi, tags: { byte, compile, extension:mli, file:OrdersFacts.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrdersFacts.cmi OrdersFacts.mli
# Target: MSetInterface.cmi, tags: { byte, compile, extension:mli, file:MSetInterface.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o MSetInterface.cmi MSetInterface.mli
# Target: MSetAVL.cmi, tags: { byte, compile, extension:mli, file:MSetAVL.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o MSetAVL.cmi MSetAVL.mli
# Target: Kildall.mli.depends, tags: { extension:mli, file:Kildall.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Kildall.mli > Kildall.mli.depends
# Target: Heaps.mli.depends, tags: { extension:mli, file:Heaps.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Heaps.mli > Heaps.mli.depends
# Target: Iteration.mli.depends, tags: { extension:mli, file:Iteration.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Iteration.mli > Iteration.mli.depends
# Target: Specif.mli.depends, tags: { extension:mli, file:Specif.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Specif.mli > Specif.mli.depends
# Target: Specif.cmi, tags: { byte, compile, extension:mli, file:Specif.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Specif.cmi Specif.mli
# Target: Lattice.mli.depends, tags: { extension:mli, file:Lattice.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Lattice.mli > Lattice.mli.depends
# Target: FSetInterface.mli.depends, tags: { extension:mli, file:FSetInterface.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FSetInterface.mli > FSetInterface.mli.depends
# Target: DecidableType.mli.depends, tags: { extension:mli, file:DecidableType.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules DecidableType.mli > DecidableType.mli.depends
# Target: Equalities.mli.depends, tags: { extension:mli, file:Equalities.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Equalities.mli > Equalities.mli.depends
# Target: Equalities.cmi, tags: { byte, compile, extension:mli, file:Equalities.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Equalities.cmi Equalities.mli
# Target: DecidableType.cmi, tags: { byte, compile, extension:mli, file:DecidableType.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o DecidableType.cmi DecidableType.mli
# Target: FSetInterface.cmi, tags: { byte, compile, extension:mli, file:FSetInterface.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FSetInterface.cmi FSetInterface.mli
# Target: Heaps.cmi, tags: { byte, compile, extension:mli, file:Heaps.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Heaps.cmi Heaps.mli
# Target: Iteration.cmi, tags: { byte, compile, extension:mli, file:Iteration.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Iteration.cmi Iteration.mli
# Target: Lattice.cmi, tags: { byte, compile, extension:mli, file:Lattice.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Lattice.cmi Lattice.mli
# Target: LTL.mli.depends, tags: { extension:mli, file:LTL.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules LTL.mli > LTL.mli.depends
# Target: RTL.mli.depends, tags: { extension:mli, file:RTL.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RTL.mli > RTL.mli.depends
# Target: Registers.mli.depends, tags: { extension:mli, file:Registers.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Registers.mli > Registers.mli.depends
# Target: FSetAVL.mli.depends, tags: { extension:mli, file:FSetAVL.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FSetAVL.mli > FSetAVL.mli.depends
# Target: OrdersAlt.mli.depends, tags: { extension:mli, file:OrdersAlt.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrdersAlt.mli > OrdersAlt.mli.depends
# Target: OrdersAlt.cmi, tags: { byte, compile, extension:mli, file:OrdersAlt.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrdersAlt.cmi OrdersAlt.mli
# Target: FSetAVL.cmi, tags: { byte, compile, extension:mli, file:FSetAVL.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FSetAVL.cmi FSetAVL.mli
# Target: Registers.cmi, tags: { byte, compile, extension:mli, file:Registers.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Registers.cmi Registers.mli
# Target: RTLtyping.mli.depends, tags: { extension:mli, file:RTLtyping.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RTLtyping.mli > RTLtyping.mli.depends
# Target: RTL.cmi, tags: { byte, compile, extension:mli, file:RTL.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RTL.cmi RTL.mli
# Target: Unityping.mli.depends, tags: { extension:mli, file:Unityping.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Unityping.mli > Unityping.mli.depends
# Target: Unityping.cmi, tags: { byte, compile, extension:mli, file:Unityping.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Unityping.cmi Unityping.mli
# Target: FSetAVLplus.cmi, tags: { byte, compile, extension:mli, file:FSetAVLplus.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FSetAVLplus.cmi FSetAVLplus.mli
# Target: Kildall.cmi, tags: { byte, compile, extension:mli, file:Kildall.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Kildall.cmi Kildall.mli
# Target: LTL.cmi, tags: { byte, compile, extension:mli, file:LTL.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o LTL.cmi LTL.mli
# Target: RTLtyping.cmi, tags: { byte, compile, extension:mli, file:RTLtyping.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RTLtyping.cmi RTLtyping.mli
# Target: CSE.mli.depends, tags: { extension:mli, file:CSE.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CSE.mli > CSE.mli.depends
# Target: Builtins.mli.depends, tags: { extension:mli, file:Builtins.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Builtins.mli > Builtins.mli.depends
# Target: Builtins0.mli.depends, tags: { extension:mli, file:Builtins0.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Builtins0.mli > Builtins0.mli.depends
# Target: Builtins1.mli.depends, tags: { extension:mli, file:Builtins1.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Builtins1.mli > Builtins1.mli.depends
# Target: Builtins0.cmi, tags: { byte, compile, extension:mli, file:Builtins0.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Builtins0.cmi Builtins0.mli
# Target: Builtins1.cmi, tags: { byte, compile, extension:mli, file:Builtins1.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Builtins1.cmi Builtins1.mli
# Target: CSEdomain.mli.depends, tags: { extension:mli, file:CSEdomain.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CSEdomain.mli > CSEdomain.mli.depends
# Target: CombineOp.mli.depends, tags: { extension:mli, file:CombineOp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CombineOp.mli > CombineOp.mli.depends
# Target: CSEdomain.cmi, tags: { byte, compile, extension:mli, file:CSEdomain.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CSEdomain.cmi CSEdomain.mli
# Target: ValueAnalysis.mli.depends, tags: { extension:mli, file:ValueAnalysis.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ValueAnalysis.mli > ValueAnalysis.mli.depends
# Target: Builtins.cmi, tags: { byte, compile, extension:mli, file:Builtins.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Builtins.cmi Builtins.mli
# Target: Compopts.mli.depends, tags: { extension:mli, file:Compopts.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Compopts.mli > Compopts.mli.depends
# Target: Liveness.mli.depends, tags: { extension:mli, file:Liveness.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Liveness.mli > Liveness.mli.depends
# Target: ValueAOp.mli.depends, tags: { extension:mli, file:ValueAOp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ValueAOp.mli > ValueAOp.mli.depends
# Target: Compopts.cmi, tags: { byte, compile, extension:mli, file:Compopts.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Compopts.cmi Compopts.mli
# Target: ValueDomain.mli.depends, tags: { extension:mli, file:ValueDomain.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ValueDomain.mli > ValueDomain.mli.depends
# Target: ValueDomain.cmi, tags: { byte, compile, extension:mli, file:ValueDomain.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ValueDomain.cmi ValueDomain.mli
# Target: Liveness.cmi, tags: { byte, compile, extension:mli, file:Liveness.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Liveness.cmi Liveness.mli
# Target: ValueAOp.cmi, tags: { byte, compile, extension:mli, file:ValueAOp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ValueAOp.cmi ValueAOp.mli
# Target: CombineOp.cmi, tags: { byte, compile, extension:mli, file:CombineOp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CombineOp.cmi CombineOp.mli
# Target: ValueAnalysis.cmi, tags: { byte, compile, extension:mli, file:ValueAnalysis.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ValueAnalysis.cmi ValueAnalysis.mli
# Target: CleanupLabels.mli.depends, tags: { extension:mli, file:CleanupLabels.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CleanupLabels.mli > CleanupLabels.mli.depends
# Target: Linear.mli.depends, tags: { extension:mli, file:Linear.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Linear.mli > Linear.mli.depends
# Target: Linear.cmi, tags: { byte, compile, extension:mli, file:Linear.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Linear.cmi Linear.mli
# Target: Clight.mli.depends, tags: { extension:mli, file:Clight.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Clight.mli > Clight.mli.depends
# Target: Cminor.mli.depends, tags: { extension:mli, file:Cminor.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cminor.mli > Cminor.mli.depends
# Target: Cminorgen.mli.depends, tags: { extension:mli, file:Cminorgen.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cminorgen.mli > Cminorgen.mli.depends
# Target: Cminor.cmi, tags: { byte, compile, extension:mli, file:Cminor.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cminor.cmi Cminor.mli
# Target: Csharpminor.mli.depends, tags: { extension:mli, file:Csharpminor.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Csharpminor.mli > Csharpminor.mli.depends
# Target: Mergesort.mli.depends, tags: { extension:mli, file:Mergesort.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Mergesort.mli > Mergesort.mli.depends
# Target: Csharpminor.cmi, tags: { byte, compile, extension:mli, file:Csharpminor.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Csharpminor.cmi Csharpminor.mli
# Target: Mergesort.cmi, tags: { byte, compile, extension:mli, file:Mergesort.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Mergesort.cmi Mergesort.mli
# Target: Constprop.mli.depends, tags: { extension:mli, file:Constprop.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Constprop.mli > Constprop.mli.depends
# Target: ConstpropOp.mli.depends, tags: { extension:mli, file:ConstpropOp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ConstpropOp.mli > ConstpropOp.mli.depends
# Target: SelectOp.mli.depends, tags: { extension:mli, file:SelectOp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SelectOp.mli > SelectOp.mli.depends
# Target: CminorSel.mli.depends, tags: { extension:mli, file:CminorSel.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CminorSel.mli > CminorSel.mli.depends
# Target: Compare_dec.mli.depends, tags: { extension:mli, file:Compare_dec.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Compare_dec.mli > Compare_dec.mli.depends
# Target: Compare_dec.cmi, tags: { byte, compile, extension:mli, file:Compare_dec.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Compare_dec.cmi Compare_dec.mli
# Target: CminorSel.cmi, tags: { byte, compile, extension:mli, file:CminorSel.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CminorSel.cmi CminorSel.mli
# Target: SelectOp.cmi, tags: { byte, compile, extension:mli, file:SelectOp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SelectOp.cmi SelectOp.mli
# Target: ConstpropOp.cmi, tags: { byte, compile, extension:mli, file:ConstpropOp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ConstpropOp.cmi ConstpropOp.mli
# Target: Cshmgen.mli.depends, tags: { extension:mli, file:Cshmgen.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cshmgen.mli > Cshmgen.mli.depends
# Target: Clight.cmi, tags: { byte, compile, extension:mli, file:Clight.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Clight.cmi Clight.mli
# Target: Deadcode.mli.depends, tags: { extension:mli, file:Deadcode.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Deadcode.mli > Deadcode.mli.depends
# Target: NeedDomain.mli.depends, tags: { extension:mli, file:NeedDomain.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NeedDomain.mli > NeedDomain.mli.depends
# Target: IntvSets.mli.depends, tags: { extension:mli, file:IntvSets.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules IntvSets.mli > IntvSets.mli.depends
# Target: IntvSets.cmi, tags: { byte, compile, extension:mli, file:IntvSets.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o IntvSets.cmi IntvSets.mli
# Target: NeedOp.mli.depends, tags: { extension:mli, file:NeedOp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NeedOp.mli > NeedOp.mli.depends
# Target: NeedDomain.cmi, tags: { byte, compile, extension:mli, file:NeedDomain.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NeedDomain.cmi NeedDomain.mli
# Target: NeedOp.cmi, tags: { byte, compile, extension:mli, file:NeedOp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NeedOp.cmi NeedOp.mli
# Target: Debugvar.mli.depends, tags: { extension:mli, file:Debugvar.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Debugvar.mli > Debugvar.mli.depends
# Target: Inlining.mli.depends, tags: { extension:mli, file:Inlining.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Inlining.mli > Inlining.mli.depends
# Target: CompCert/backend/Inliningaux.ml.depends, tags: { extension:ml, file:CompCert/backend/Inliningaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Inliningaux.ml > CompCert/backend/Inliningaux.ml.depends
# Target: CompCert/cfrontend/C2C.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/cfrontend/C2C.cmo, file:CompCert/cfrontend/C2C.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/C2C.cmo CompCert/cfrontend/C2C.ml
# Target: CompCert/backend/Inliningaux.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/Inliningaux.cmo, file:CompCert/backend/Inliningaux.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Inliningaux.cmo CompCert/backend/Inliningaux.ml
# Target: Linearize.mli.depends, tags: { extension:mli, file:Linearize.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Linearize.mli > Linearize.mli.depends
# Target: RTLgen.mli.depends, tags: { extension:mli, file:RTLgen.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RTLgen.mli > RTLgen.mli.depends
# Target: Renumber.mli.depends, tags: { extension:mli, file:Renumber.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Renumber.mli > Renumber.mli.depends
# Target: Postorder.mli.depends, tags: { extension:mli, file:Postorder.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Postorder.mli > Postorder.mli.depends
# Target: Postorder.cmi, tags: { byte, compile, extension:mli, file:Postorder.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Postorder.cmi Postorder.mli
# Target: Selection.mli.depends, tags: { extension:mli, file:Selection.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Selection.mli > Selection.mli.depends
# Target: Cminortyping.mli.depends, tags: { extension:mli, file:Cminortyping.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cminortyping.mli > Cminortyping.mli.depends
# Target: SelectDiv.mli.depends, tags: { extension:mli, file:SelectDiv.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SelectDiv.mli > SelectDiv.mli.depends
# Target: SelectLong.mli.depends, tags: { extension:mli, file:SelectLong.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SelectLong.mli > SelectLong.mli.depends
# Target: SplitLong.mli.depends, tags: { extension:mli, file:SplitLong.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SplitLong.mli > SplitLong.mli.depends
# Target: SplitLong.cmi, tags: { byte, compile, extension:mli, file:SplitLong.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SplitLong.cmi SplitLong.mli
# Target: SelectLong.cmi, tags: { byte, compile, extension:mli, file:SelectLong.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SelectLong.cmi SelectLong.mli
# Target: Switch.mli.depends, tags: { extension:mli, file:Switch.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Switch.mli > Switch.mli.depends
# Target: Cminortyping.cmi, tags: { byte, compile, extension:mli, file:Cminortyping.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cminortyping.cmi Cminortyping.mli
# Target: SelectDiv.cmi, tags: { byte, compile, extension:mli, file:SelectDiv.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SelectDiv.cmi SelectDiv.mli
# Target: Switch.cmi, tags: { byte, compile, extension:mli, file:Switch.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Switch.cmi Switch.mli
# Target: SimplLocals.mli.depends, tags: { extension:mli, file:SimplLocals.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SimplLocals.mli > SimplLocals.mli.depends
# Target: Stacking.mli.depends, tags: { extension:mli, file:Stacking.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Stacking.mli > Stacking.mli.depends
# Target: Bounds.mli.depends, tags: { extension:mli, file:Bounds.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bounds.mli > Bounds.mli.depends
# Target: Lineartyping.mli.depends, tags: { extension:mli, file:Lineartyping.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Lineartyping.mli > Lineartyping.mli.depends
# Target: Stacklayout.mli.depends, tags: { extension:mli, file:Stacklayout.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Stacklayout.mli > Stacklayout.mli.depends
# Target: Bounds.cmi, tags: { byte, compile, extension:mli, file:Bounds.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bounds.cmi Bounds.mli
# Target: Lineartyping.cmi, tags: { byte, compile, extension:mli, file:Lineartyping.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Lineartyping.cmi Lineartyping.mli
# Target: Stacklayout.cmi, tags: { byte, compile, extension:mli, file:Stacklayout.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Stacklayout.cmi Stacklayout.mli
# Target: Tailcall.mli.depends, tags: { extension:mli, file:Tailcall.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Tailcall.mli > Tailcall.mli.depends
# Target: Tunneling.mli.depends, tags: { extension:mli, file:Tunneling.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Tunneling.mli > Tunneling.mli.depends
# Target: UnionFind.mli.depends, tags: { extension:mli, file:UnionFind.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules UnionFind.mli > UnionFind.mli.depends
# Target: UnionFind.cmi, tags: { byte, compile, extension:mli, file:UnionFind.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o UnionFind.cmi UnionFind.mli
# Target: Unusedglob.mli.depends, tags: { extension:mli, file:Unusedglob.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Unusedglob.mli > Unusedglob.mli.depends
# Target: Allocation.cmi, tags: { byte, compile, extension:mli, file:Allocation.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Allocation.cmi Allocation.mli
# Target: CSE.cmi, tags: { byte, compile, extension:mli, file:CSE.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CSE.cmi CSE.mli
# Target: CleanupLabels.cmi, tags: { byte, compile, extension:mli, file:CleanupLabels.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CleanupLabels.cmi CleanupLabels.mli
# Target: Cminorgen.cmi, tags: { byte, compile, extension:mli, file:Cminorgen.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cminorgen.cmi Cminorgen.mli
# Target: Constprop.cmi, tags: { byte, compile, extension:mli, file:Constprop.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Constprop.cmi Constprop.mli
# Target: Cshmgen.cmi, tags: { byte, compile, extension:mli, file:Cshmgen.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cshmgen.cmi Cshmgen.mli
# Target: Deadcode.cmi, tags: { byte, compile, extension:mli, file:Deadcode.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Deadcode.cmi Deadcode.mli
# Target: Debugvar.cmi, tags: { byte, compile, extension:mli, file:Debugvar.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Debugvar.cmi Debugvar.mli
# Target: Inlining.cmi, tags: { byte, compile, extension:mli, file:Inlining.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Inlining.cmi Inlining.mli
# Target: Linearize.cmi, tags: { byte, compile, extension:mli, file:Linearize.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Linearize.cmi Linearize.mli
# Target: RTLgen.cmi, tags: { byte, compile, extension:mli, file:RTLgen.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RTLgen.cmi RTLgen.mli
# Target: Renumber.cmi, tags: { byte, compile, extension:mli, file:Renumber.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Renumber.cmi Renumber.mli
# Target: Selection.cmi, tags: { byte, compile, extension:mli, file:Selection.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Selection.cmi Selection.mli
# Target: SimplLocals.cmi, tags: { byte, compile, extension:mli, file:SimplLocals.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SimplLocals.cmi SimplLocals.mli
# Target: Stacking.cmi, tags: { byte, compile, extension:mli, file:Stacking.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Stacking.cmi Stacking.mli
# Target: Tailcall.cmi, tags: { byte, compile, extension:mli, file:Tailcall.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Tailcall.cmi Tailcall.mli
# Target: Tunneling.cmi, tags: { byte, compile, extension:mli, file:Tunneling.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Tunneling.cmi Tunneling.mli
# Target: Unusedglob.cmi, tags: { byte, compile, extension:mli, file:Unusedglob.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Unusedglob.cmi Unusedglob.mli
# Target: CompCert/driver/Driveraux.mli.depends, tags: { extension:mli, file:CompCert/driver/Driveraux.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Driveraux.mli > CompCert/driver/Driveraux.mli.depends
# Target: Imp.mli.depends, tags: { extension:mli, file:Imp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Imp.mli > Imp.mli.depends
# Target: AList.mli.depends, tags: { extension:mli, file:AList.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules AList.mli > AList.mli.depends
# Target: Coqlib0.mli.depends, tags: { extension:mli, file:Coqlib0.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Coqlib0.mli > Coqlib0.mli.depends
# Target: RelDec.mli.depends, tags: { extension:mli, file:RelDec.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RelDec.mli > RelDec.mli.depends
# Target: Coqlib0.cmi, tags: { byte, compile, extension:mli, file:Coqlib0.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Coqlib0.cmi Coqlib0.mli
# Target: RelDec.cmi, tags: { byte, compile, extension:mli, file:RelDec.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RelDec.cmi RelDec.mli
# Target: Skeleton.mli.depends, tags: { extension:mli, file:Skeleton.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Skeleton.mli > Skeleton.mli.depends
# Target: AList.cmi, tags: { byte, compile, extension:mli, file:AList.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o AList.cmi AList.mli
# Target: Skeleton.cmi, tags: { byte, compile, extension:mli, file:Skeleton.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Skeleton.cmi Skeleton.mli
# Target: Imp2Asm.mli.depends, tags: { extension:mli, file:Imp2Asm.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Imp2Asm.mli > Imp2Asm.mli.depends
# Target: Csharpminor2Asm.mli.depends, tags: { extension:mli, file:Csharpminor2Asm.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Csharpminor2Asm.mli > Csharpminor2Asm.mli.depends
# Target: Compiler.cmi, tags: { byte, compile, extension:mli, file:Compiler.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Compiler.cmi Compiler.mli
# Target: Imp.cmi, tags: { byte, compile, extension:mli, file:Imp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Imp.cmi Imp.mli
# Target: Imp2Csharpminor.mli.depends, tags: { extension:mli, file:Imp2Csharpminor.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Imp2Csharpminor.mli > Imp2Csharpminor.mli.depends
# Target: Csharpminor2Asm.cmi, tags: { byte, compile, extension:mli, file:Csharpminor2Asm.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Csharpminor2Asm.cmi Csharpminor2Asm.mli
# Target: Imp2Csharpminor.cmi, tags: { byte, compile, extension:mli, file:Imp2Csharpminor.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Imp2Csharpminor.cmi Imp2Csharpminor.mli
# Target: ImpFactorial.mli.depends, tags: { extension:mli, file:ImpFactorial.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpFactorial.mli > ImpFactorial.mli.depends
# Target: ImpKnot.mli.depends, tags: { extension:mli, file:ImpKnot.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpKnot.mli > ImpKnot.mli.depends
# Target: ImpLink.mli.depends, tags: { extension:mli, file:ImpLink.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpLink.mli > ImpLink.mli.depends
# Target: ImpMem1.mli.depends, tags: { extension:mli, file:ImpMem1.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpMem1.mli > ImpMem1.mli.depends
# Target: ImpMem2.mli.depends, tags: { extension:mli, file:ImpMem2.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpMem2.mli > ImpMem2.mli.depends
# Target: ImpMutsum.mli.depends, tags: { extension:mli, file:ImpMutsum.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpMutsum.mli > ImpMutsum.mli.depends
# Target: ImpSimple.mli.depends, tags: { extension:mli, file:ImpSimple.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpSimple.mli > ImpSimple.mli.depends
# Target: NewClientImp.mli.depends, tags: { extension:mli, file:NewClientImp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewClientImp.mli > NewClientImp.mli.depends
# Target: NewEchoImp.mli.depends, tags: { extension:mli, file:NewEchoImp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewEchoImp.mli > NewEchoImp.mli.depends
# Target: NewEchoMainImp.mli.depends, tags: { extension:mli, file:NewEchoMainImp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewEchoMainImp.mli > NewEchoMainImp.mli.depends
# Target: NewStackImp.mli.depends, tags: { extension:mli, file:NewStackImp.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewStackImp.mli > NewStackImp.mli.depends
# Target: CompCert/backend/PrintAsm.mli.depends, tags: { extension:mli, file:CompCert/backend/PrintAsm.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintAsm.mli > CompCert/backend/PrintAsm.mli.depends
# Target: CompCert/x86/Asmexpand.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/x86/Asmexpand.cmo, file:CompCert/x86/Asmexpand.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/Asmexpand.cmo CompCert/x86/Asmexpand.ml
# Target: CompCert/driver/Driveraux.cmi, tags: { byte, compile, extension:mli, file:CompCert/driver/Driveraux.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Driveraux.cmi CompCert/driver/Driveraux.mli
# Target: Imp2Asm.cmi, tags: { byte, compile, extension:mli, file:Imp2Asm.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Imp2Asm.cmi Imp2Asm.mli
# Target: ImpFactorial.cmi, tags: { byte, compile, extension:mli, file:ImpFactorial.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpFactorial.cmi ImpFactorial.mli
# Target: ImpKnot.cmi, tags: { byte, compile, extension:mli, file:ImpKnot.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpKnot.cmi ImpKnot.mli
# Target: ImpLink.cmi, tags: { byte, compile, extension:mli, file:ImpLink.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpLink.cmi ImpLink.mli
# Target: ImpMem1.cmi, tags: { byte, compile, extension:mli, file:ImpMem1.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpMem1.cmi ImpMem1.mli
# Target: ImpMem2.cmi, tags: { byte, compile, extension:mli, file:ImpMem2.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpMem2.cmi ImpMem2.mli
# Target: ImpMutsum.cmi, tags: { byte, compile, extension:mli, file:ImpMutsum.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpMutsum.cmi ImpMutsum.mli
# Target: ImpSimple.cmi, tags: { byte, compile, extension:mli, file:ImpSimple.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpSimple.cmi ImpSimple.mli
# Target: NewClientImp.cmi, tags: { byte, compile, extension:mli, file:NewClientImp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewClientImp.cmi NewClientImp.mli
# Target: NewEchoImp.cmi, tags: { byte, compile, extension:mli, file:NewEchoImp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewEchoImp.cmi NewEchoImp.mli
# Target: NewEchoMainImp.cmi, tags: { byte, compile, extension:mli, file:NewEchoMainImp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewEchoMainImp.cmi NewEchoMainImp.mli
# Target: NewStackImp.cmi, tags: { byte, compile, extension:mli, file:NewStackImp.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewStackImp.cmi NewStackImp.mli
# Target: CompCert/backend/PrintAsm.cmi, tags: { byte, compile, extension:mli, file:CompCert/backend/PrintAsm.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintAsm.cmi CompCert/backend/PrintAsm.mli
# Target: test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o test.cmo test.ml
# Target: AST.ml.depends, tags: { extension:ml, file:AST.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules AST.ml > AST.ml.depends
# Target: Archi.ml.depends, tags: { extension:ml, file:Archi.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Archi.ml > Archi.ml.depends
# Target: BinNums.ml.depends, tags: { extension:ml, file:BinNums.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinNums.ml > BinNums.ml.depends
# Target: CompCert/driver/Configuration.ml.depends, tags: { extension:ml, file:CompCert/driver/Configuration.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Configuration.ml > CompCert/driver/Configuration.ml.depends
# Target: CompCert/lib/Commandline.ml.depends, tags: { extension:ml, file:CompCert/lib/Commandline.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Commandline.ml > CompCert/lib/Commandline.ml.depends
# Target: CompCert/lib/Responsefile.mll, tags: { extension:mll, file:CompCert/lib/Responsefile.mll, lexer, ocaml, ocamllex, quiet, traverse }
ocamllex.opt -q CompCert/lib/Responsefile.mll
# Target: CompCert/lib/Responsefile.ml.depends, tags: { extension:ml, file:CompCert/lib/Responsefile.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Responsefile.ml > CompCert/lib/Responsefile.ml.depends
# Target: CompCert/lib/Responsefile.mli.depends, tags: { extension:mli, file:CompCert/lib/Responsefile.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Responsefile.mli > CompCert/lib/Responsefile.mli.depends
# Target: CompCert/lib/Responsefile.cmi, tags: { byte, compile, extension:mli, file:CompCert/lib/Responsefile.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Responsefile.cmi CompCert/lib/Responsefile.mli
# Target: CompCert/lib/Responsefile.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/lib/Responsefile.cmx, file:CompCert/lib/Responsefile.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Responsefile.cmx CompCert/lib/Responsefile.ml
# Target: CompCert/lib/Readconfig.mll, tags: { extension:mll, file:CompCert/lib/Readconfig.mll, lexer, ocaml, ocamllex, quiet, traverse }
ocamllex.opt -q CompCert/lib/Readconfig.mll
# Target: CompCert/lib/Readconfig.ml.depends, tags: { extension:ml, file:CompCert/lib/Readconfig.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Readconfig.ml > CompCert/lib/Readconfig.ml.depends
# Target: CompCert/lib/Readconfig.mli.depends, tags: { extension:mli, file:CompCert/lib/Readconfig.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Readconfig.mli > CompCert/lib/Readconfig.mli.depends
# Target: CompCert/lib/Readconfig.cmi, tags: { byte, compile, extension:mli, file:CompCert/lib/Readconfig.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Readconfig.cmi CompCert/lib/Readconfig.mli
# Target: CompCert/lib/Commandline.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/lib/Commandline.cmx, file:CompCert/lib/Commandline.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Commandline.cmx CompCert/lib/Commandline.ml
# Target: CompCert/lib/Readconfig.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/lib/Readconfig.cmx, file:CompCert/lib/Readconfig.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Readconfig.cmx CompCert/lib/Readconfig.ml
# Target: Datatypes.ml.depends, tags: { extension:ml, file:Datatypes.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Datatypes.ml > Datatypes.ml.depends
# Target: BinNums.cmx, tags: { compile, extension:cmx, extension:ml, file:BinNums.cmx, file:BinNums.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinNums.cmx BinNums.ml
# Target: CompCert/driver/Configuration.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/driver/Configuration.cmx, file:CompCert/driver/Configuration.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Configuration.cmx CompCert/driver/Configuration.ml
# Target: Datatypes.cmx, tags: { compile, extension:cmx, extension:ml, file:Datatypes.cmx, file:Datatypes.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Datatypes.cmx Datatypes.ml
# Target: BinInt.ml.depends, tags: { extension:ml, file:BinInt.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinInt.ml > BinInt.ml.depends
# Target: BinNat.ml.depends, tags: { extension:ml, file:BinNat.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinNat.ml > BinNat.ml.depends
# Target: BinPos.ml.depends, tags: { extension:ml, file:BinPos.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinPos.ml > BinPos.ml.depends
# Target: BinPosDef.ml.depends, tags: { extension:ml, file:BinPosDef.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BinPosDef.ml > BinPosDef.ml.depends
# Target: Nat.ml.depends, tags: { extension:ml, file:Nat.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Nat.ml > Nat.ml.depends
# Target: BinPosDef.cmx, tags: { compile, extension:cmx, extension:ml, file:BinPosDef.cmx, file:BinPosDef.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinPosDef.cmx BinPosDef.ml
# Target: Nat.cmx, tags: { compile, extension:cmx, extension:ml, file:Nat.cmx, file:Nat.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Nat.cmx Nat.ml
# Target: BinPos.cmx, tags: { compile, extension:cmx, extension:ml, file:BinPos.cmx, file:BinPos.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinPos.cmx BinPos.ml
# Target: BinNat.cmx, tags: { compile, extension:cmx, extension:ml, file:BinNat.cmx, file:BinNat.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinNat.cmx BinNat.ml
# Target: Bool.ml.depends, tags: { extension:ml, file:Bool.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bool.ml > Bool.ml.depends
# Target: Coqlib.ml.depends, tags: { extension:ml, file:Coqlib.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Coqlib.ml > Coqlib.ml.depends
# Target: BinInt.cmx, tags: { compile, extension:cmx, extension:ml, file:BinInt.cmx, file:BinInt.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BinInt.cmx BinInt.ml
# Target: List0.ml.depends, tags: { extension:ml, file:List0.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules List0.ml > List0.ml.depends
# Target: ZArith_dec.ml.depends, tags: { extension:ml, file:ZArith_dec.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ZArith_dec.ml > ZArith_dec.ml.depends
# Target: List0.cmx, tags: { compile, extension:cmx, extension:ml, file:List0.cmx, file:List0.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o List0.cmx List0.ml
# Target: ZArith_dec.cmx, tags: { compile, extension:cmx, extension:ml, file:ZArith_dec.cmx, file:ZArith_dec.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ZArith_dec.cmx ZArith_dec.ml
# Target: Errors.ml.depends, tags: { extension:ml, file:Errors.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Errors.ml > Errors.ml.depends
# Target: Floats.ml.depends, tags: { extension:ml, file:Floats.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Floats.ml > Floats.ml.depends
# Target: Archi.cmx, tags: { compile, extension:cmx, extension:ml, file:Archi.cmx, file:Archi.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Archi.cmx Archi.ml
# Target: Binary.ml.depends, tags: { extension:ml, file:Binary.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Binary.ml > Binary.ml.depends
# Target: Bool.cmx, tags: { compile, extension:cmx, extension:ml, file:Bool.cmx, file:Bool.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bool.cmx Bool.ml
# Target: Bracket.ml.depends, tags: { extension:ml, file:Bracket.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bracket.ml > Bracket.ml.depends
# Target: SpecFloat.ml.depends, tags: { extension:ml, file:SpecFloat.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SpecFloat.ml > SpecFloat.ml.depends
# Target: Zbool.ml.depends, tags: { extension:ml, file:Zbool.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zbool.ml > Zbool.ml.depends
# Target: SpecFloat.cmx, tags: { compile, extension:cmx, extension:ml, file:SpecFloat.cmx, file:SpecFloat.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SpecFloat.cmx SpecFloat.ml
# Target: Zbool.cmx, tags: { compile, extension:cmx, extension:ml, file:Zbool.cmx, file:Zbool.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zbool.cmx Zbool.ml
# Target: FLT.ml.depends, tags: { extension:ml, file:FLT.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FLT.ml > FLT.ml.depends
# Target: Round.ml.depends, tags: { extension:ml, file:Round.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Round.ml > Round.ml.depends
# Target: Zaux.ml.depends, tags: { extension:ml, file:Zaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zaux.ml > Zaux.ml.depends
# Target: Zpower.ml.depends, tags: { extension:ml, file:Zpower.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zpower.ml > Zpower.ml.depends
# Target: Bracket.cmx, tags: { compile, extension:cmx, extension:ml, file:Bracket.cmx, file:Bracket.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bracket.cmx Bracket.ml
# Target: FLT.cmx, tags: { compile, extension:cmx, extension:ml, file:FLT.cmx, file:FLT.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FLT.cmx FLT.ml
# Target: Round.cmx, tags: { compile, extension:cmx, extension:ml, file:Round.cmx, file:Round.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Round.cmx Round.ml
# Target: Zaux.cmx, tags: { compile, extension:cmx, extension:ml, file:Zaux.cmx, file:Zaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zaux.cmx Zaux.ml
# Target: Zpower.cmx, tags: { compile, extension:cmx, extension:ml, file:Zpower.cmx, file:Zpower.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zpower.cmx Zpower.ml
# Target: Bits.ml.depends, tags: { extension:ml, file:Bits.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bits.ml > Bits.ml.depends
# Target: Binary.cmx, tags: { compile, extension:cmx, extension:ml, file:Binary.cmx, file:Binary.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Binary.cmx Binary.ml
# Target: Coqlib.cmx, tags: { compile, extension:cmx, extension:ml, file:Coqlib.cmx, file:Coqlib.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Coqlib.cmx Coqlib.ml
# Target: IEEE754_extra.ml.depends, tags: { extension:ml, file:IEEE754_extra.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules IEEE754_extra.ml > IEEE754_extra.ml.depends
# Target: Integers.ml.depends, tags: { extension:ml, file:Integers.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Integers.ml > Integers.ml.depends
# Target: Zbits.ml.depends, tags: { extension:ml, file:Zbits.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Zbits.ml > Zbits.ml.depends
# Target: Zbits.cmx, tags: { compile, extension:cmx, extension:ml, file:Zbits.cmx, file:Zbits.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Zbits.cmx Zbits.ml
# Target: Bits.cmx, tags: { compile, extension:cmx, extension:ml, file:Bits.cmx, file:Bits.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bits.cmx Bits.ml
# Target: IEEE754_extra.cmx, tags: { compile, extension:cmx, extension:ml, file:IEEE754_extra.cmx, file:IEEE754_extra.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o IEEE754_extra.cmx IEEE754_extra.ml
# Target: Integers.cmx, tags: { compile, extension:cmx, extension:ml, file:Integers.cmx, file:Integers.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Integers.cmx Integers.ml
# Target: Maps.ml.depends, tags: { extension:ml, file:Maps.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Maps.ml > Maps.ml.depends
# Target: EquivDec.ml.depends, tags: { extension:ml, file:EquivDec.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules EquivDec.ml > EquivDec.ml.depends
# Target: EquivDec.cmx, tags: { compile, extension:cmx, extension:ml, file:EquivDec.cmx, file:EquivDec.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o EquivDec.cmx EquivDec.ml
# Target: String0.ml.depends, tags: { extension:ml, file:String0.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules String0.ml > String0.ml.depends
# Target: Errors.cmx, tags: { compile, extension:cmx, extension:ml, file:Errors.cmx, file:Errors.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Errors.cmx Errors.ml
# Target: Floats.cmx, tags: { compile, extension:cmx, extension:ml, file:Floats.cmx, file:Floats.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Floats.cmx Floats.ml
# Target: Maps.cmx, tags: { compile, extension:cmx, extension:ml, file:Maps.cmx, file:Maps.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Maps.cmx Maps.ml
# Target: String0.cmx, tags: { compile, extension:cmx, extension:ml, file:String0.cmx, file:String0.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o String0.cmx String0.ml
# Target: AST.cmx, tags: { compile, extension:cmx, extension:ml, file:AST.cmx, file:AST.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o AST.cmx AST.ml
# Target: Asm.ml.depends, tags: { extension:ml, file:Asm.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Asm.ml > Asm.ml.depends
# Target: Machregs.ml.depends, tags: { extension:ml, file:Machregs.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Machregs.ml > Machregs.ml.depends
# Target: Op.ml.depends, tags: { extension:ml, file:Op.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Op.ml > Op.ml.depends
# Target: BoolEqual.ml.depends, tags: { extension:ml, file:BoolEqual.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules BoolEqual.ml > BoolEqual.ml.depends
# Target: BoolEqual.cmx, tags: { compile, extension:cmx, extension:ml, file:BoolEqual.cmx, file:BoolEqual.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o BoolEqual.cmx BoolEqual.ml
# Target: Op.cmx, tags: { compile, extension:cmx, extension:ml, file:Op.cmx, file:Op.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Op.cmx Op.ml
# Target: Machregs.cmx, tags: { compile, extension:cmx, extension:ml, file:Machregs.cmx, file:Machregs.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Machregs.cmx Machregs.ml
# Target: CompCert/backend/Asmexpandaux.ml.depends, tags: { extension:ml, file:CompCert/backend/Asmexpandaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Asmexpandaux.ml > CompCert/backend/Asmexpandaux.ml.depends
# Target: Asm.cmx, tags: { compile, extension:cmx, extension:ml, file:Asm.cmx, file:Asm.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Asm.cmx Asm.ml
# Target: CompCert/debug/Debug.ml.depends, tags: { extension:ml, file:CompCert/debug/Debug.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/debug/Debug.ml > CompCert/debug/Debug.ml.depends
# Target: CompCert/lib/Camlcoq.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/lib/Camlcoq.cmx, file:CompCert/lib/Camlcoq.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Camlcoq.cmx CompCert/lib/Camlcoq.ml
# Target: CompCert/cparser/Env.ml.depends, tags: { extension:ml, file:CompCert/cparser/Env.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Env.ml > CompCert/cparser/Env.ml.depends
# Target: CompCert/common/Sections.ml.depends, tags: { extension:ml, file:CompCert/common/Sections.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/common/Sections.ml > CompCert/common/Sections.ml.depends
# Target: CompCert/driver/Clflags.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/driver/Clflags.cmx, file:CompCert/driver/Clflags.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Clflags.cmx CompCert/driver/Clflags.ml
# Target: CompCert/cparser/Cutil.ml.depends, tags: { extension:ml, file:CompCert/cparser/Cutil.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Cutil.ml > CompCert/cparser/Cutil.ml.depends
# Target: CompCert/cparser/Cprint.ml.depends, tags: { extension:ml, file:CompCert/cparser/Cprint.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Cprint.ml > CompCert/cparser/Cprint.ml.depends
# Target: CompCert/cparser/Diagnostics.ml.depends, tags: { extension:ml, file:CompCert/cparser/Diagnostics.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Diagnostics.ml > CompCert/cparser/Diagnostics.ml.depends
# Target: CompCert/driver/Version.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/driver/Version.cmx, file:CompCert/driver/Version.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Version.cmx CompCert/driver/Version.ml
# Target: CompCert/cparser/Env.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/Env.cmx, file:CompCert/cparser/Env.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Env.cmx CompCert/cparser/Env.ml
# Target: CompCert/cparser/Machine.ml.depends, tags: { extension:ml, file:CompCert/cparser/Machine.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Machine.ml > CompCert/cparser/Machine.ml.depends
# Target: CompCert/cparser/Cprint.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/Cprint.cmx, file:CompCert/cparser/Cprint.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Cprint.cmx CompCert/cparser/Cprint.ml
# Target: CompCert/cparser/Diagnostics.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/Diagnostics.cmx, file:CompCert/cparser/Diagnostics.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Diagnostics.cmx CompCert/cparser/Diagnostics.ml
# Target: CompCert/cparser/Machine.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/Machine.cmx, file:CompCert/cparser/Machine.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Machine.cmx CompCert/cparser/Machine.ml
# Target: CompCert/cparser/Cutil.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/Cutil.cmx, file:CompCert/cparser/Cutil.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Cutil.cmx CompCert/cparser/Cutil.ml
# Target: CompCert/common/Sections.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/common/Sections.cmx, file:CompCert/common/Sections.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/common -I CompCert/driver -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/common/Sections.cmx CompCert/common/Sections.ml
# Target: CompCert/debug/Debug.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/debug/Debug.cmx, file:CompCert/debug/Debug.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/Debug.cmx CompCert/debug/Debug.ml
# Target: Asmgen.ml.depends, tags: { extension:ml, file:Asmgen.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Asmgen.ml > Asmgen.ml.depends
# Target: Mach.ml.depends, tags: { extension:ml, file:Mach.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Mach.ml > Mach.ml.depends
# Target: Mach.cmx, tags: { compile, extension:cmx, extension:ml, file:Mach.cmx, file:Mach.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Mach.cmx Mach.ml
# Target: Conventions.ml.depends, tags: { extension:ml, file:Conventions.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Conventions.ml > Conventions.ml.depends
# Target: Conventions1.ml.depends, tags: { extension:ml, file:Conventions1.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Conventions1.ml > Conventions1.ml.depends
# Target: Locations.ml.depends, tags: { extension:ml, file:Locations.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Locations.ml > Locations.ml.depends
# Target: Ordered.ml.depends, tags: { extension:ml, file:Ordered.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ordered.ml > Ordered.ml.depends
# Target: OrderedType.ml.depends, tags: { extension:ml, file:OrderedType.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrderedType.ml > OrderedType.ml.depends
# Target: OrderedType.cmx, tags: { compile, extension:cmx, extension:ml, file:OrderedType.cmx, file:OrderedType.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrderedType.cmx OrderedType.ml
# Target: Ordered.cmx, tags: { compile, extension:cmx, extension:ml, file:Ordered.cmx, file:Ordered.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ordered.cmx Ordered.ml
# Target: Locations.cmx, tags: { compile, extension:cmx, extension:ml, file:Locations.cmx, file:Locations.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Locations.cmx Locations.ml
# Target: Conventions1.cmx, tags: { compile, extension:cmx, extension:ml, file:Conventions1.cmx, file:Conventions1.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Conventions1.cmx Conventions1.ml
# Target: Memdata.ml.depends, tags: { extension:ml, file:Memdata.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Memdata.ml > Memdata.ml.depends
# Target: PeanoNat.ml.depends, tags: { extension:ml, file:PeanoNat.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules PeanoNat.ml > PeanoNat.ml.depends
# Target: Values.ml.depends, tags: { extension:ml, file:Values.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Values.ml > Values.ml.depends
# Target: PeanoNat.cmx, tags: { compile, extension:cmx, extension:ml, file:PeanoNat.cmx, file:PeanoNat.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o PeanoNat.cmx PeanoNat.ml
# Target: Values.cmx, tags: { compile, extension:cmx, extension:ml, file:Values.cmx, file:Values.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Values.cmx Values.ml
# Target: Memdata.cmx, tags: { compile, extension:cmx, extension:ml, file:Memdata.cmx, file:Memdata.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Memdata.cmx Memdata.ml
# Target: CompCert/backend/Asmexpandaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Asmexpandaux.cmx, file:CompCert/backend/Asmexpandaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Asmexpandaux.cmx CompCert/backend/Asmexpandaux.ml
# Target: Asmgen.cmx, tags: { compile, extension:cmx, extension:ml, file:Asmgen.cmx, file:Asmgen.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Asmgen.cmx Asmgen.ml
# Target: Conventions.cmx, tags: { compile, extension:cmx, extension:ml, file:Conventions.cmx, file:Conventions.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Conventions.cmx Conventions.ml
# Target: CompCert/backend/PrintAsmaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintAsmaux.cmx, file:CompCert/backend/PrintAsmaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintAsmaux.cmx CompCert/backend/PrintAsmaux.ml
# Target: CompCert/backend/AisAnnot.ml.depends, tags: { extension:ml, file:CompCert/backend/AisAnnot.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/AisAnnot.ml > CompCert/backend/AisAnnot.ml.depends
# Target: CompCert/cparser/Ceval.ml.depends, tags: { extension:ml, file:CompCert/cparser/Ceval.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cparser/Ceval.ml > CompCert/cparser/Ceval.ml.depends
# Target: Cop.ml.depends, tags: { extension:ml, file:Cop.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cop.ml > Cop.ml.depends
# Target: Ctypes.ml.depends, tags: { extension:ml, file:Ctypes.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ctypes.ml > Ctypes.ml.depends
# Target: Memory.ml.depends, tags: { extension:ml, file:Memory.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Memory.ml > Memory.ml.depends
# Target: Memtype.ml.depends, tags: { extension:ml, file:Memtype.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Memtype.ml > Memtype.ml.depends
# Target: Znumtheory.ml.depends, tags: { extension:ml, file:Znumtheory.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Znumtheory.ml > Znumtheory.ml.depends
# Target: Memtype.cmx, tags: { compile, extension:cmx, extension:ml, file:Memtype.cmx, file:Memtype.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Memtype.cmx Memtype.ml
# Target: Znumtheory.cmx, tags: { compile, extension:cmx, extension:ml, file:Znumtheory.cmx, file:Znumtheory.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Znumtheory.cmx Znumtheory.ml
# Target: Ctypes.cmx, tags: { compile, extension:cmx, extension:ml, file:Ctypes.cmx, file:Ctypes.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ctypes.cmx Ctypes.ml
# Target: Memory.cmx, tags: { compile, extension:cmx, extension:ml, file:Memory.cmx, file:Memory.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Memory.cmx Memory.ml
# Target: Csyntax.ml.depends, tags: { extension:ml, file:Csyntax.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Csyntax.ml > Csyntax.ml.depends
# Target: Cop.cmx, tags: { compile, extension:cmx, extension:ml, file:Cop.cmx, file:Cop.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cop.cmx Cop.ml
# Target: Ctyping.ml.depends, tags: { extension:ml, file:Ctyping.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ctyping.ml > Ctyping.ml.depends
# Target: Csyntax.cmx, tags: { compile, extension:cmx, extension:ml, file:Csyntax.cmx, file:Csyntax.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Csyntax.cmx Csyntax.ml
# Target: Ring.ml.depends, tags: { extension:ml, file:Ring.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Ring.ml > Ring.ml.depends
# Target: Ring.cmx, tags: { compile, extension:cmx, extension:ml, file:Ring.cmx, file:Ring.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ring.cmx Ring.ml
# Target: CompCert/x86/CBuiltins.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/x86/CBuiltins.cmx, file:CompCert/x86/CBuiltins.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/CBuiltins.cmx CompCert/x86/CBuiltins.ml
# Target: CompCert/cparser/Ceval.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/Ceval.cmx, file:CompCert/cparser/Ceval.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/Ceval.cmx CompCert/cparser/Ceval.ml
# Target: CompCert/x86/Machregsaux.ml.depends, tags: { extension:ml, file:CompCert/x86/Machregsaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/x86/Machregsaux.ml > CompCert/x86/Machregsaux.ml.depends
# Target: CompCert/backend/Machregsnames.ml.depends, tags: { extension:ml, file:CompCert/backend/Machregsnames.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Machregsnames.ml > CompCert/backend/Machregsnames.ml.depends
# Target: CompCert/x86/Machregsaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/x86/Machregsaux.cmx, file:CompCert/x86/Machregsaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/Machregsaux.cmx CompCert/x86/Machregsaux.ml
# Target: CompCert/backend/Machregsnames.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Machregsnames.cmx, file:CompCert/backend/Machregsnames.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Machregsnames.cmx CompCert/backend/Machregsnames.ml
# Target: Initializers.ml.depends, tags: { extension:ml, file:Initializers.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Initializers.ml > Initializers.ml.depends
# Target: CompCert/backend/AisAnnot.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/AisAnnot.cmx, file:CompCert/backend/AisAnnot.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/AisAnnot.cmx CompCert/backend/AisAnnot.ml
# Target: Ctyping.cmx, tags: { compile, extension:cmx, extension:ml, file:Ctyping.cmx, file:Ctyping.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Ctyping.cmx Ctyping.ml
# Target: CompCert/cparser/ExtendedAsm.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cparser/ExtendedAsm.cmx, file:CompCert/cparser/ExtendedAsm.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cparser -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/cparser/ExtendedAsm.cmx CompCert/cparser/ExtendedAsm.ml
# Target: Initializers.cmx, tags: { compile, extension:cmx, extension:ml, file:Initializers.cmx, file:Initializers.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Initializers.cmx Initializers.ml
# Target: Compiler.ml.depends, tags: { extension:ml, file:Compiler.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Compiler.ml > Compiler.ml.depends
# Target: Allocation.ml.depends, tags: { extension:ml, file:Allocation.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Allocation.ml > Allocation.ml.depends
# Target: FSetAVLplus.ml.depends, tags: { extension:ml, file:FSetAVLplus.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FSetAVLplus.ml > FSetAVLplus.ml.depends
# Target: Int0.ml.depends, tags: { extension:ml, file:Int0.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Int0.ml > Int0.ml.depends
# Target: MSetAVL.ml.depends, tags: { extension:ml, file:MSetAVL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules MSetAVL.ml > MSetAVL.ml.depends
# Target: Int0.cmx, tags: { compile, extension:cmx, extension:ml, file:Int0.cmx, file:Int0.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Int0.cmx Int0.ml
# Target: MSetInterface.ml.depends, tags: { extension:ml, file:MSetInterface.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules MSetInterface.ml > MSetInterface.ml.depends
# Target: Orders.ml.depends, tags: { extension:ml, file:Orders.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Orders.ml > Orders.ml.depends
# Target: OrdersFacts.ml.depends, tags: { extension:ml, file:OrdersFacts.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrdersFacts.ml > OrdersFacts.ml.depends
# Target: Orders.cmx, tags: { compile, extension:cmx, extension:ml, file:Orders.cmx, file:Orders.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Orders.cmx Orders.ml
# Target: OrdersTac.ml.depends, tags: { extension:ml, file:OrdersTac.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrdersTac.ml > OrdersTac.ml.depends
# Target: OrdersTac.cmx, tags: { compile, extension:cmx, extension:ml, file:OrdersTac.cmx, file:OrdersTac.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrdersTac.cmx OrdersTac.ml
# Target: OrdersFacts.cmx, tags: { compile, extension:cmx, extension:ml, file:OrdersFacts.cmx, file:OrdersFacts.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrdersFacts.cmx OrdersFacts.ml
# Target: MSetInterface.cmx, tags: { compile, extension:cmx, extension:ml, file:MSetInterface.cmx, file:MSetInterface.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o MSetInterface.cmx MSetInterface.ml
# Target: MSetAVL.cmx, tags: { compile, extension:cmx, extension:ml, file:MSetAVL.cmx, file:MSetAVL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o MSetAVL.cmx MSetAVL.ml
# Target: Kildall.ml.depends, tags: { extension:ml, file:Kildall.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Kildall.ml > Kildall.ml.depends
# Target: Heaps.ml.depends, tags: { extension:ml, file:Heaps.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Heaps.ml > Heaps.ml.depends
# Target: Iteration.ml.depends, tags: { extension:ml, file:Iteration.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Iteration.ml > Iteration.ml.depends
# Target: Specif.ml.depends, tags: { extension:ml, file:Specif.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Specif.ml > Specif.ml.depends
# Target: Specif.cmx, tags: { compile, extension:cmx, extension:ml, file:Specif.cmx, file:Specif.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Specif.cmx Specif.ml
# Target: Lattice.ml.depends, tags: { extension:ml, file:Lattice.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Lattice.ml > Lattice.ml.depends
# Target: FSetInterface.ml.depends, tags: { extension:ml, file:FSetInterface.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FSetInterface.ml > FSetInterface.ml.depends
# Target: DecidableType.ml.depends, tags: { extension:ml, file:DecidableType.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules DecidableType.ml > DecidableType.ml.depends
# Target: Equalities.ml.depends, tags: { extension:ml, file:Equalities.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Equalities.ml > Equalities.ml.depends
# Target: Equalities.cmx, tags: { compile, extension:cmx, extension:ml, file:Equalities.cmx, file:Equalities.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Equalities.cmx Equalities.ml
# Target: DecidableType.cmx, tags: { compile, extension:cmx, extension:ml, file:DecidableType.cmx, file:DecidableType.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o DecidableType.cmx DecidableType.ml
# Target: FSetInterface.cmx, tags: { compile, extension:cmx, extension:ml, file:FSetInterface.cmx, file:FSetInterface.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FSetInterface.cmx FSetInterface.ml
# Target: Heaps.cmx, tags: { compile, extension:cmx, extension:ml, file:Heaps.cmx, file:Heaps.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Heaps.cmx Heaps.ml
# Target: Iteration.cmx, tags: { compile, extension:cmx, extension:ml, file:Iteration.cmx, file:Iteration.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Iteration.cmx Iteration.ml
# Target: Lattice.cmx, tags: { compile, extension:cmx, extension:ml, file:Lattice.cmx, file:Lattice.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Lattice.cmx Lattice.ml
# Target: LTL.ml.depends, tags: { extension:ml, file:LTL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules LTL.ml > LTL.ml.depends
# Target: RTL.ml.depends, tags: { extension:ml, file:RTL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RTL.ml > RTL.ml.depends
# Target: Registers.ml.depends, tags: { extension:ml, file:Registers.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Registers.ml > Registers.ml.depends
# Target: FSetAVL.ml.depends, tags: { extension:ml, file:FSetAVL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules FSetAVL.ml > FSetAVL.ml.depends
# Target: OrdersAlt.ml.depends, tags: { extension:ml, file:OrdersAlt.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules OrdersAlt.ml > OrdersAlt.ml.depends
# Target: OrdersAlt.cmx, tags: { compile, extension:cmx, extension:ml, file:OrdersAlt.cmx, file:OrdersAlt.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o OrdersAlt.cmx OrdersAlt.ml
# Target: FSetAVL.cmx, tags: { compile, extension:cmx, extension:ml, file:FSetAVL.cmx, file:FSetAVL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FSetAVL.cmx FSetAVL.ml
# Target: Registers.cmx, tags: { compile, extension:cmx, extension:ml, file:Registers.cmx, file:Registers.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Registers.cmx Registers.ml
# Target: RTLtyping.ml.depends, tags: { extension:ml, file:RTLtyping.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RTLtyping.ml > RTLtyping.ml.depends
# Target: RTL.cmx, tags: { compile, extension:cmx, extension:ml, file:RTL.cmx, file:RTL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RTL.cmx RTL.ml
# Target: Unityping.ml.depends, tags: { extension:ml, file:Unityping.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Unityping.ml > Unityping.ml.depends
# Target: Unityping.cmx, tags: { compile, extension:cmx, extension:ml, file:Unityping.cmx, file:Unityping.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Unityping.cmx Unityping.ml
# Target: CompCert/backend/Regalloc.ml.depends, tags: { extension:ml, file:CompCert/backend/Regalloc.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Regalloc.ml > CompCert/backend/Regalloc.ml.depends
# Target: CompCert/backend/IRC.mli.depends, tags: { extension:mli, file:CompCert/backend/IRC.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/IRC.mli > CompCert/backend/IRC.mli.depends
# Target: CompCert/backend/XTL.mli.depends, tags: { extension:mli, file:CompCert/backend/XTL.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/XTL.mli > CompCert/backend/XTL.mli.depends
# Target: CompCert/backend/XTL.cmi, tags: { byte, compile, extension:mli, file:CompCert/backend/XTL.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/XTL.cmi CompCert/backend/XTL.mli
# Target: CompCert/backend/PrintLTL.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintLTL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintLTL.ml > CompCert/backend/PrintLTL.ml.depends
# Target: CompCert/common/PrintAST.ml.depends, tags: { extension:ml, file:CompCert/common/PrintAST.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/common/PrintAST.ml > CompCert/common/PrintAST.ml.depends
# Target: CompCert/x86/PrintOp.ml.depends, tags: { extension:ml, file:CompCert/x86/PrintOp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/x86/PrintOp.ml > CompCert/x86/PrintOp.ml.depends
# Target: CompCert/common/PrintAST.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/common/PrintAST.cmo, file:CompCert/common/PrintAST.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/common -I CompCert/driver -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/common/PrintAST.cmo CompCert/common/PrintAST.ml
# Target: CompCert/x86/PrintOp.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/x86/PrintOp.cmo, file:CompCert/x86/PrintOp.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/PrintOp.cmo CompCert/x86/PrintOp.ml
# Target: CompCert/backend/PrintXTL.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintXTL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintXTL.ml > CompCert/backend/PrintXTL.ml.depends
# Target: CompCert/backend/Splitting.ml.depends, tags: { extension:ml, file:CompCert/backend/Splitting.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Splitting.ml > CompCert/backend/Splitting.ml.depends
# Target: CompCert/backend/IRC.cmi, tags: { byte, compile, extension:mli, file:CompCert/backend/IRC.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/IRC.cmi CompCert/backend/IRC.mli
# Target: CompCert/backend/PrintLTL.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/PrintLTL.cmo, file:CompCert/backend/PrintLTL.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintLTL.cmo CompCert/backend/PrintLTL.ml
# Target: CompCert/backend/PrintXTL.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/PrintXTL.cmo, file:CompCert/backend/PrintXTL.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintXTL.cmo CompCert/backend/PrintXTL.ml
# Target: CompCert/backend/Splitting.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/Splitting.cmo, file:CompCert/backend/Splitting.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Splitting.cmo CompCert/backend/Splitting.ml
# Target: CompCert/backend/Regalloc.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/Regalloc.cmo, file:CompCert/backend/Regalloc.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Regalloc.cmo CompCert/backend/Regalloc.ml
# Target: CompCert/backend/IRC.ml.depends, tags: { extension:ml, file:CompCert/backend/IRC.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/IRC.ml > CompCert/backend/IRC.ml.depends
# Target: CompCert/cfrontend/CPragmas.ml.depends, tags: { extension:ml, file:CompCert/cfrontend/CPragmas.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cfrontend/CPragmas.ml > CompCert/cfrontend/CPragmas.ml.depends
# Target: CompCert/lib/Tokenize.mli.depends, tags: { extension:mli, file:CompCert/lib/Tokenize.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Tokenize.mli > CompCert/lib/Tokenize.mli.depends
# Target: CompCert/lib/Tokenize.cmi, tags: { byte, compile, extension:mli, file:CompCert/lib/Tokenize.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Tokenize.cmi CompCert/lib/Tokenize.mli
# Target: CompCert/cfrontend/CPragmas.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/cfrontend/CPragmas.cmo, file:CompCert/cfrontend/CPragmas.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/CPragmas.cmo CompCert/cfrontend/CPragmas.ml
# Target: CompCert/cfrontend/C2C.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cfrontend/C2C.cmx, file:CompCert/cfrontend/C2C.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/C2C.cmx CompCert/cfrontend/C2C.ml
# Target: CompCert/lib/Tokenize.mll, tags: { extension:mll, file:CompCert/lib/Tokenize.mll, lexer, ocaml, ocamllex, quiet, traverse }
ocamllex.opt -q CompCert/lib/Tokenize.mll
# Target: CompCert/lib/Tokenize.ml.depends, tags: { extension:ml, file:CompCert/lib/Tokenize.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Tokenize.ml > CompCert/lib/Tokenize.ml.depends
# Target: CompCert/lib/Tokenize.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/lib/Tokenize.cmx, file:CompCert/lib/Tokenize.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Tokenize.cmx CompCert/lib/Tokenize.ml
# Target: CompCert/common/PrintAST.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/common/PrintAST.cmx, file:CompCert/common/PrintAST.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/common -I CompCert/driver -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/common/PrintAST.cmx CompCert/common/PrintAST.ml
# Target: CompCert/backend/XTL.ml.depends, tags: { extension:ml, file:CompCert/backend/XTL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/XTL.ml > CompCert/backend/XTL.ml.depends
# Target: CompCert/x86/PrintOp.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/x86/PrintOp.cmx, file:CompCert/x86/PrintOp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/PrintOp.cmx CompCert/x86/PrintOp.ml
# Target: CompCert/backend/XTL.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/XTL.cmx, file:CompCert/backend/XTL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/XTL.cmx CompCert/backend/XTL.ml
# Target: CompCert/cfrontend/CPragmas.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cfrontend/CPragmas.cmx, file:CompCert/cfrontend/CPragmas.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/CPragmas.cmx CompCert/cfrontend/CPragmas.ml
# Target: CompCert/backend/PrintXTL.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintXTL.cmx, file:CompCert/backend/PrintXTL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintXTL.cmx CompCert/backend/PrintXTL.ml
# Target: Kildall.cmx, tags: { compile, extension:cmx, extension:ml, file:Kildall.cmx, file:Kildall.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Kildall.cmx Kildall.ml
# Target: LTL.cmx, tags: { compile, extension:cmx, extension:ml, file:LTL.cmx, file:LTL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o LTL.cmx LTL.ml
# Target: RTLtyping.cmx, tags: { compile, extension:cmx, extension:ml, file:RTLtyping.cmx, file:RTLtyping.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RTLtyping.cmx RTLtyping.ml
# Target: CompCert/backend/IRC.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/IRC.cmx, file:CompCert/backend/IRC.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/IRC.cmx CompCert/backend/IRC.ml
# Target: CompCert/backend/PrintLTL.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintLTL.cmx, file:CompCert/backend/PrintLTL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintLTL.cmx CompCert/backend/PrintLTL.ml
# Target: CompCert/backend/Splitting.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Splitting.cmx, file:CompCert/backend/Splitting.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Splitting.cmx CompCert/backend/Splitting.ml
# Target: FSetAVLplus.cmx, tags: { compile, extension:cmx, extension:ml, file:FSetAVLplus.cmx, file:FSetAVLplus.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o FSetAVLplus.cmx FSetAVLplus.ml
# Target: CompCert/backend/Regalloc.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Regalloc.cmx, file:CompCert/backend/Regalloc.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Regalloc.cmx CompCert/backend/Regalloc.ml
# Target: CSE.ml.depends, tags: { extension:ml, file:CSE.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CSE.ml > CSE.ml.depends
# Target: Builtins.ml.depends, tags: { extension:ml, file:Builtins.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Builtins.ml > Builtins.ml.depends
# Target: Builtins0.ml.depends, tags: { extension:ml, file:Builtins0.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Builtins0.ml > Builtins0.ml.depends
# Target: Builtins1.ml.depends, tags: { extension:ml, file:Builtins1.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Builtins1.ml > Builtins1.ml.depends
# Target: Builtins0.cmx, tags: { compile, extension:cmx, extension:ml, file:Builtins0.cmx, file:Builtins0.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Builtins0.cmx Builtins0.ml
# Target: Builtins1.cmx, tags: { compile, extension:cmx, extension:ml, file:Builtins1.cmx, file:Builtins1.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Builtins1.cmx Builtins1.ml
# Target: CSEdomain.ml.depends, tags: { extension:ml, file:CSEdomain.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CSEdomain.ml > CSEdomain.ml.depends
# Target: CombineOp.ml.depends, tags: { extension:ml, file:CombineOp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CombineOp.ml > CombineOp.ml.depends
# Target: CSEdomain.cmx, tags: { compile, extension:cmx, extension:ml, file:CSEdomain.cmx, file:CSEdomain.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CSEdomain.cmx CSEdomain.ml
# Target: ValueAnalysis.ml.depends, tags: { extension:ml, file:ValueAnalysis.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ValueAnalysis.ml > ValueAnalysis.ml.depends
# Target: Builtins.cmx, tags: { compile, extension:cmx, extension:ml, file:Builtins.cmx, file:Builtins.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Builtins.cmx Builtins.ml
# Target: Compopts.ml.depends, tags: { extension:ml, file:Compopts.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Compopts.ml > Compopts.ml.depends
# Target: Liveness.ml.depends, tags: { extension:ml, file:Liveness.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Liveness.ml > Liveness.ml.depends
# Target: ValueAOp.ml.depends, tags: { extension:ml, file:ValueAOp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ValueAOp.ml > ValueAOp.ml.depends
# Target: Compopts.cmx, tags: { compile, extension:cmx, extension:ml, file:Compopts.cmx, file:Compopts.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Compopts.cmx Compopts.ml
# Target: ValueDomain.ml.depends, tags: { extension:ml, file:ValueDomain.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ValueDomain.ml > ValueDomain.ml.depends
# Target: ValueDomain.cmx, tags: { compile, extension:cmx, extension:ml, file:ValueDomain.cmx, file:ValueDomain.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ValueDomain.cmx ValueDomain.ml
# Target: Liveness.cmx, tags: { compile, extension:cmx, extension:ml, file:Liveness.cmx, file:Liveness.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Liveness.cmx Liveness.ml
# Target: ValueAOp.cmx, tags: { compile, extension:cmx, extension:ml, file:ValueAOp.cmx, file:ValueAOp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ValueAOp.cmx ValueAOp.ml
# Target: CombineOp.cmx, tags: { compile, extension:cmx, extension:ml, file:CombineOp.cmx, file:CombineOp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CombineOp.cmx CombineOp.ml
# Target: ValueAnalysis.cmx, tags: { compile, extension:cmx, extension:ml, file:ValueAnalysis.cmx, file:ValueAnalysis.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ValueAnalysis.cmx ValueAnalysis.ml
# Target: CleanupLabels.ml.depends, tags: { extension:ml, file:CleanupLabels.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CleanupLabels.ml > CleanupLabels.ml.depends
# Target: Linear.ml.depends, tags: { extension:ml, file:Linear.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Linear.ml > Linear.ml.depends
# Target: Linear.cmx, tags: { compile, extension:cmx, extension:ml, file:Linear.cmx, file:Linear.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Linear.cmx Linear.ml
# Target: Clight.ml.depends, tags: { extension:ml, file:Clight.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Clight.ml > Clight.ml.depends
# Target: Cminor.ml.depends, tags: { extension:ml, file:Cminor.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cminor.ml > Cminor.ml.depends
# Target: Cminorgen.ml.depends, tags: { extension:ml, file:Cminorgen.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cminorgen.ml > Cminorgen.ml.depends
# Target: Cminor.cmx, tags: { compile, extension:cmx, extension:ml, file:Cminor.cmx, file:Cminor.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cminor.cmx Cminor.ml
# Target: Csharpminor.ml.depends, tags: { extension:ml, file:Csharpminor.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Csharpminor.ml > Csharpminor.ml.depends
# Target: Mergesort.ml.depends, tags: { extension:ml, file:Mergesort.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Mergesort.ml > Mergesort.ml.depends
# Target: Csharpminor.cmx, tags: { compile, extension:cmx, extension:ml, file:Csharpminor.cmx, file:Csharpminor.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Csharpminor.cmx Csharpminor.ml
# Target: Mergesort.cmx, tags: { compile, extension:cmx, extension:ml, file:Mergesort.cmx, file:Mergesort.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Mergesort.cmx Mergesort.ml
# Target: Constprop.ml.depends, tags: { extension:ml, file:Constprop.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Constprop.ml > Constprop.ml.depends
# Target: ConstpropOp.ml.depends, tags: { extension:ml, file:ConstpropOp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ConstpropOp.ml > ConstpropOp.ml.depends
# Target: SelectOp.ml.depends, tags: { extension:ml, file:SelectOp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SelectOp.ml > SelectOp.ml.depends
# Target: CminorSel.ml.depends, tags: { extension:ml, file:CminorSel.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CminorSel.ml > CminorSel.ml.depends
# Target: Compare_dec.ml.depends, tags: { extension:ml, file:Compare_dec.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Compare_dec.ml > Compare_dec.ml.depends
# Target: Compare_dec.cmx, tags: { compile, extension:cmx, extension:ml, file:Compare_dec.cmx, file:Compare_dec.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Compare_dec.cmx Compare_dec.ml
# Target: CminorSel.cmx, tags: { compile, extension:cmx, extension:ml, file:CminorSel.cmx, file:CminorSel.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CminorSel.cmx CminorSel.ml
# Target: SelectOp.cmx, tags: { compile, extension:cmx, extension:ml, file:SelectOp.cmx, file:SelectOp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SelectOp.cmx SelectOp.ml
# Target: ConstpropOp.cmx, tags: { compile, extension:cmx, extension:ml, file:ConstpropOp.cmx, file:ConstpropOp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ConstpropOp.cmx ConstpropOp.ml
# Target: Cshmgen.ml.depends, tags: { extension:ml, file:Cshmgen.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cshmgen.ml > Cshmgen.ml.depends
# Target: Clight.cmx, tags: { compile, extension:cmx, extension:ml, file:Clight.cmx, file:Clight.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Clight.cmx Clight.ml
# Target: Deadcode.ml.depends, tags: { extension:ml, file:Deadcode.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Deadcode.ml > Deadcode.ml.depends
# Target: NeedDomain.ml.depends, tags: { extension:ml, file:NeedDomain.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NeedDomain.ml > NeedDomain.ml.depends
# Target: IntvSets.ml.depends, tags: { extension:ml, file:IntvSets.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules IntvSets.ml > IntvSets.ml.depends
# Target: IntvSets.cmx, tags: { compile, extension:cmx, extension:ml, file:IntvSets.cmx, file:IntvSets.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o IntvSets.cmx IntvSets.ml
# Target: NeedOp.ml.depends, tags: { extension:ml, file:NeedOp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NeedOp.ml > NeedOp.ml.depends
# Target: NeedDomain.cmx, tags: { compile, extension:cmx, extension:ml, file:NeedDomain.cmx, file:NeedDomain.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NeedDomain.cmx NeedDomain.ml
# Target: NeedOp.cmx, tags: { compile, extension:cmx, extension:ml, file:NeedOp.cmx, file:NeedOp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NeedOp.cmx NeedOp.ml
# Target: Debugvar.ml.depends, tags: { extension:ml, file:Debugvar.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Debugvar.ml > Debugvar.ml.depends
# Target: Inlining.ml.depends, tags: { extension:ml, file:Inlining.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Inlining.ml > Inlining.ml.depends
# Target: CompCert/backend/Inliningaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Inliningaux.cmx, file:CompCert/backend/Inliningaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Inliningaux.cmx CompCert/backend/Inliningaux.ml
# Target: Linearize.ml.depends, tags: { extension:ml, file:Linearize.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Linearize.ml > Linearize.ml.depends
# Target: CompCert/backend/Linearizeaux.ml.depends, tags: { extension:ml, file:CompCert/backend/Linearizeaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Linearizeaux.ml > CompCert/backend/Linearizeaux.ml.depends
# Target: CompCert/backend/Linearizeaux.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/Linearizeaux.cmo, file:CompCert/backend/Linearizeaux.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Linearizeaux.cmo CompCert/backend/Linearizeaux.ml
# Target: CompCert/backend/Linearizeaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Linearizeaux.cmx, file:CompCert/backend/Linearizeaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Linearizeaux.cmx CompCert/backend/Linearizeaux.ml
# Target: CompCert/cfrontend/PrintClight.ml.depends, tags: { extension:ml, file:CompCert/cfrontend/PrintClight.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cfrontend/PrintClight.ml > CompCert/cfrontend/PrintClight.ml.depends
# Target: CompCert/cfrontend/PrintCsyntax.ml.depends, tags: { extension:ml, file:CompCert/cfrontend/PrintCsyntax.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/cfrontend/PrintCsyntax.ml > CompCert/cfrontend/PrintCsyntax.ml.depends
# Target: CompCert/cfrontend/PrintCsyntax.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/cfrontend/PrintCsyntax.cmo, file:CompCert/cfrontend/PrintCsyntax.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/PrintCsyntax.cmo CompCert/cfrontend/PrintCsyntax.ml
# Target: CompCert/cfrontend/PrintClight.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/cfrontend/PrintClight.cmo, file:CompCert/cfrontend/PrintClight.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/PrintClight.cmo CompCert/cfrontend/PrintClight.ml
# Target: CompCert/cfrontend/PrintCsyntax.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cfrontend/PrintCsyntax.cmx, file:CompCert/cfrontend/PrintCsyntax.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/PrintCsyntax.cmx CompCert/cfrontend/PrintCsyntax.ml
# Target: CompCert/backend/PrintCminor.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintCminor.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintCminor.ml > CompCert/backend/PrintCminor.ml.depends
# Target: CompCert/backend/PrintCminor.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/PrintCminor.cmo, file:CompCert/backend/PrintCminor.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintCminor.cmo CompCert/backend/PrintCminor.ml
# Target: CompCert/backend/PrintMach.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintMach.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintMach.ml > CompCert/backend/PrintMach.ml.depends
# Target: CompCert/backend/PrintMach.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/PrintMach.cmo, file:CompCert/backend/PrintMach.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintMach.cmo CompCert/backend/PrintMach.ml
# Target: CompCert/backend/PrintRTL.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintRTL.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintRTL.ml > CompCert/backend/PrintRTL.ml.depends
# Target: CompCert/backend/PrintRTL.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/PrintRTL.cmo, file:CompCert/backend/PrintRTL.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintRTL.cmo CompCert/backend/PrintRTL.ml
# Target: RTLgen.ml.depends, tags: { extension:ml, file:RTLgen.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RTLgen.ml > RTLgen.ml.depends
# Target: CompCert/backend/RTLgenaux.ml.depends, tags: { extension:ml, file:CompCert/backend/RTLgenaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/RTLgenaux.ml > CompCert/backend/RTLgenaux.ml.depends
# Target: CompCert/backend/RTLgenaux.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/RTLgenaux.cmo, file:CompCert/backend/RTLgenaux.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/RTLgenaux.cmo CompCert/backend/RTLgenaux.ml
# Target: CompCert/backend/RTLgenaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/RTLgenaux.cmx, file:CompCert/backend/RTLgenaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/RTLgenaux.cmx CompCert/backend/RTLgenaux.ml
# Target: Renumber.ml.depends, tags: { extension:ml, file:Renumber.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Renumber.ml > Renumber.ml.depends
# Target: Postorder.ml.depends, tags: { extension:ml, file:Postorder.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Postorder.ml > Postorder.ml.depends
# Target: Postorder.cmx, tags: { compile, extension:cmx, extension:ml, file:Postorder.cmx, file:Postorder.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Postorder.cmx Postorder.ml
# Target: Selection.ml.depends, tags: { extension:ml, file:Selection.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Selection.ml > Selection.ml.depends
# Target: Cminortyping.ml.depends, tags: { extension:ml, file:Cminortyping.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Cminortyping.ml > Cminortyping.ml.depends
# Target: SelectDiv.ml.depends, tags: { extension:ml, file:SelectDiv.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SelectDiv.ml > SelectDiv.ml.depends
# Target: SelectLong.ml.depends, tags: { extension:ml, file:SelectLong.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SelectLong.ml > SelectLong.ml.depends
# Target: SplitLong.ml.depends, tags: { extension:ml, file:SplitLong.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SplitLong.ml > SplitLong.ml.depends
# Target: SplitLong.cmx, tags: { compile, extension:cmx, extension:ml, file:SplitLong.cmx, file:SplitLong.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SplitLong.cmx SplitLong.ml
# Target: SelectLong.cmx, tags: { compile, extension:cmx, extension:ml, file:SelectLong.cmx, file:SelectLong.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SelectLong.cmx SelectLong.ml
# Target: CompCert/backend/Selectionaux.ml.depends, tags: { extension:ml, file:CompCert/backend/Selectionaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Selectionaux.ml > CompCert/backend/Selectionaux.ml.depends
# Target: CompCert/backend/Selectionaux.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/Selectionaux.cmo, file:CompCert/backend/Selectionaux.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Selectionaux.cmo CompCert/backend/Selectionaux.ml
# Target: Switch.ml.depends, tags: { extension:ml, file:Switch.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Switch.ml > Switch.ml.depends
# Target: CompCert/common/Switchaux.ml.depends, tags: { extension:ml, file:CompCert/common/Switchaux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/common/Switchaux.ml > CompCert/common/Switchaux.ml.depends
# Target: CompCert/common/Switchaux.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/common/Switchaux.cmo, file:CompCert/common/Switchaux.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/common -I CompCert/driver -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/common/Switchaux.cmo CompCert/common/Switchaux.ml
# Target: Switch.cmx, tags: { compile, extension:cmx, extension:ml, file:Switch.cmx, file:Switch.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Switch.cmx Switch.ml
# Target: Cminortyping.cmx, tags: { compile, extension:cmx, extension:ml, file:Cminortyping.cmx, file:Cminortyping.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cminortyping.cmx Cminortyping.ml
# Target: SelectDiv.cmx, tags: { compile, extension:cmx, extension:ml, file:SelectDiv.cmx, file:SelectDiv.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SelectDiv.cmx SelectDiv.ml
# Target: CompCert/backend/Selectionaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Selectionaux.cmx, file:CompCert/backend/Selectionaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Selectionaux.cmx CompCert/backend/Selectionaux.ml
# Target: CompCert/common/Switchaux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/common/Switchaux.cmx, file:CompCert/common/Switchaux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/common -I CompCert/driver -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/common/Switchaux.cmx CompCert/common/Switchaux.ml
# Target: SimplLocals.ml.depends, tags: { extension:ml, file:SimplLocals.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules SimplLocals.ml > SimplLocals.ml.depends
# Target: Stacking.ml.depends, tags: { extension:ml, file:Stacking.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Stacking.ml > Stacking.ml.depends
# Target: Bounds.ml.depends, tags: { extension:ml, file:Bounds.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Bounds.ml > Bounds.ml.depends
# Target: Lineartyping.ml.depends, tags: { extension:ml, file:Lineartyping.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Lineartyping.ml > Lineartyping.ml.depends
# Target: Stacklayout.ml.depends, tags: { extension:ml, file:Stacklayout.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Stacklayout.ml > Stacklayout.ml.depends
# Target: Bounds.cmx, tags: { compile, extension:cmx, extension:ml, file:Bounds.cmx, file:Bounds.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Bounds.cmx Bounds.ml
# Target: Lineartyping.cmx, tags: { compile, extension:cmx, extension:ml, file:Lineartyping.cmx, file:Lineartyping.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Lineartyping.cmx Lineartyping.ml
# Target: Stacklayout.cmx, tags: { compile, extension:cmx, extension:ml, file:Stacklayout.cmx, file:Stacklayout.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Stacklayout.cmx Stacklayout.ml
# Target: Tailcall.ml.depends, tags: { extension:ml, file:Tailcall.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Tailcall.ml > Tailcall.ml.depends
# Target: CompCert/driver/Timing.ml.depends, tags: { extension:ml, file:CompCert/driver/Timing.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Timing.ml > CompCert/driver/Timing.ml.depends
# Target: CompCert/driver/Timing.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/driver/Timing.cmo, file:CompCert/driver/Timing.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Timing.cmo CompCert/driver/Timing.ml
# Target: Tunneling.ml.depends, tags: { extension:ml, file:Tunneling.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Tunneling.ml > Tunneling.ml.depends
# Target: UnionFind.ml.depends, tags: { extension:ml, file:UnionFind.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules UnionFind.ml > UnionFind.ml.depends
# Target: UnionFind.cmx, tags: { compile, extension:cmx, extension:ml, file:UnionFind.cmx, file:UnionFind.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o UnionFind.cmx UnionFind.ml
# Target: Unusedglob.ml.depends, tags: { extension:ml, file:Unusedglob.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Unusedglob.ml > Unusedglob.ml.depends
# Target: Allocation.cmx, tags: { compile, extension:cmx, extension:ml, file:Allocation.cmx, file:Allocation.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Allocation.cmx Allocation.ml
# Target: CSE.cmx, tags: { compile, extension:cmx, extension:ml, file:CSE.cmx, file:CSE.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CSE.cmx CSE.ml
# Target: CleanupLabels.cmx, tags: { compile, extension:cmx, extension:ml, file:CleanupLabels.cmx, file:CleanupLabels.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CleanupLabels.cmx CleanupLabels.ml
# Target: Cminorgen.cmx, tags: { compile, extension:cmx, extension:ml, file:Cminorgen.cmx, file:Cminorgen.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cminorgen.cmx Cminorgen.ml
# Target: Constprop.cmx, tags: { compile, extension:cmx, extension:ml, file:Constprop.cmx, file:Constprop.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Constprop.cmx Constprop.ml
# Target: Cshmgen.cmx, tags: { compile, extension:cmx, extension:ml, file:Cshmgen.cmx, file:Cshmgen.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Cshmgen.cmx Cshmgen.ml
# Target: Deadcode.cmx, tags: { compile, extension:cmx, extension:ml, file:Deadcode.cmx, file:Deadcode.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Deadcode.cmx Deadcode.ml
# Target: Debugvar.cmx, tags: { compile, extension:cmx, extension:ml, file:Debugvar.cmx, file:Debugvar.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Debugvar.cmx Debugvar.ml
# Target: Inlining.cmx, tags: { compile, extension:cmx, extension:ml, file:Inlining.cmx, file:Inlining.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Inlining.cmx Inlining.ml
# Target: Linearize.cmx, tags: { compile, extension:cmx, extension:ml, file:Linearize.cmx, file:Linearize.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Linearize.cmx Linearize.ml
# Target: CompCert/cfrontend/PrintClight.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/cfrontend/PrintClight.cmx, file:CompCert/cfrontend/PrintClight.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/cfrontend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/x86 -I CompCert/backend -o CompCert/cfrontend/PrintClight.cmx CompCert/cfrontend/PrintClight.ml
# Target: CompCert/backend/PrintCminor.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintCminor.cmx, file:CompCert/backend/PrintCminor.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintCminor.cmx CompCert/backend/PrintCminor.ml
# Target: CompCert/backend/PrintMach.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintMach.cmx, file:CompCert/backend/PrintMach.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintMach.cmx CompCert/backend/PrintMach.ml
# Target: CompCert/backend/PrintRTL.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintRTL.cmx, file:CompCert/backend/PrintRTL.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintRTL.cmx CompCert/backend/PrintRTL.ml
# Target: RTLgen.cmx, tags: { compile, extension:cmx, extension:ml, file:RTLgen.cmx, file:RTLgen.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RTLgen.cmx RTLgen.ml
# Target: Renumber.cmx, tags: { compile, extension:cmx, extension:ml, file:Renumber.cmx, file:Renumber.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Renumber.cmx Renumber.ml
# Target: Selection.cmx, tags: { compile, extension:cmx, extension:ml, file:Selection.cmx, file:Selection.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Selection.cmx Selection.ml
# Target: SimplLocals.cmx, tags: { compile, extension:cmx, extension:ml, file:SimplLocals.cmx, file:SimplLocals.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o SimplLocals.cmx SimplLocals.ml
# Target: Stacking.cmx, tags: { compile, extension:cmx, extension:ml, file:Stacking.cmx, file:Stacking.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Stacking.cmx Stacking.ml
# Target: Tailcall.cmx, tags: { compile, extension:cmx, extension:ml, file:Tailcall.cmx, file:Tailcall.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Tailcall.cmx Tailcall.ml
# Target: CompCert/driver/Timing.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/driver/Timing.cmx, file:CompCert/driver/Timing.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Timing.cmx CompCert/driver/Timing.ml
# Target: Tunneling.cmx, tags: { compile, extension:cmx, extension:ml, file:Tunneling.cmx, file:Tunneling.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Tunneling.cmx Tunneling.ml
# Target: Unusedglob.cmx, tags: { compile, extension:cmx, extension:ml, file:Unusedglob.cmx, file:Unusedglob.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Unusedglob.cmx Unusedglob.ml
# Target: CompCert/driver/Driveraux.ml.depends, tags: { extension:ml, file:CompCert/driver/Driveraux.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/driver/Driveraux.ml > CompCert/driver/Driveraux.ml.depends
# Target: Imp.ml.depends, tags: { extension:ml, file:Imp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Imp.ml > Imp.ml.depends
# Target: AList.ml.depends, tags: { extension:ml, file:AList.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules AList.ml > AList.ml.depends
# Target: Coqlib0.ml.depends, tags: { extension:ml, file:Coqlib0.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Coqlib0.ml > Coqlib0.ml.depends
# Target: RelDec.ml.depends, tags: { extension:ml, file:RelDec.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules RelDec.ml > RelDec.ml.depends
# Target: Coqlib0.cmx, tags: { compile, extension:cmx, extension:ml, file:Coqlib0.cmx, file:Coqlib0.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Coqlib0.cmx Coqlib0.ml
# Target: RelDec.cmx, tags: { compile, extension:cmx, extension:ml, file:RelDec.cmx, file:RelDec.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o RelDec.cmx RelDec.ml
# Target: Skeleton.ml.depends, tags: { extension:ml, file:Skeleton.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Skeleton.ml > Skeleton.ml.depends
# Target: AList.cmx, tags: { compile, extension:cmx, extension:ml, file:AList.cmx, file:AList.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o AList.cmx AList.ml
# Target: Skeleton.cmx, tags: { compile, extension:cmx, extension:ml, file:Skeleton.cmx, file:Skeleton.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Skeleton.cmx Skeleton.ml
# Target: Imp2Asm.ml.depends, tags: { extension:ml, file:Imp2Asm.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Imp2Asm.ml > Imp2Asm.ml.depends
# Target: Csharpminor2Asm.ml.depends, tags: { extension:ml, file:Csharpminor2Asm.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Csharpminor2Asm.ml > Csharpminor2Asm.ml.depends
# Target: Compiler.cmx, tags: { compile, extension:cmx, extension:ml, file:Compiler.cmx, file:Compiler.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Compiler.cmx Compiler.ml
# Target: Imp.cmx, tags: { compile, extension:cmx, extension:ml, file:Imp.cmx, file:Imp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Imp.cmx Imp.ml
# Target: Imp2Csharpminor.ml.depends, tags: { extension:ml, file:Imp2Csharpminor.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules Imp2Csharpminor.ml > Imp2Csharpminor.ml.depends
# Target: Csharpminor2Asm.cmx, tags: { compile, extension:cmx, extension:ml, file:Csharpminor2Asm.cmx, file:Csharpminor2Asm.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Csharpminor2Asm.cmx Csharpminor2Asm.ml
# Target: Imp2Csharpminor.cmx, tags: { compile, extension:cmx, extension:ml, file:Imp2Csharpminor.cmx, file:Imp2Csharpminor.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Imp2Csharpminor.cmx Imp2Csharpminor.ml
# Target: ImpFactorial.ml.depends, tags: { extension:ml, file:ImpFactorial.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpFactorial.ml > ImpFactorial.ml.depends
# Target: ImpNotations.ml.depends, tags: { extension:ml, file:ImpNotations.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpNotations.ml > ImpNotations.ml.depends
# Target: ImpNotations.mli.depends, tags: { extension:mli, file:ImpNotations.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpNotations.mli > ImpNotations.mli.depends
# Target: ImpNotations.cmi, tags: { byte, compile, extension:mli, file:ImpNotations.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpNotations.cmi ImpNotations.mli
# Target: ImpNotations.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpNotations.cmx, file:ImpNotations.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpNotations.cmx ImpNotations.ml
# Target: ImpKnot.ml.depends, tags: { extension:ml, file:ImpKnot.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpKnot.ml > ImpKnot.ml.depends
# Target: ImpLink.ml.depends, tags: { extension:ml, file:ImpLink.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpLink.ml > ImpLink.ml.depends
# Target: ImpMem1.ml.depends, tags: { extension:ml, file:ImpMem1.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpMem1.ml > ImpMem1.ml.depends
# Target: ImpMem2.ml.depends, tags: { extension:ml, file:ImpMem2.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpMem2.ml > ImpMem2.ml.depends
# Target: ImpMutsum.ml.depends, tags: { extension:ml, file:ImpMutsum.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpMutsum.ml > ImpMutsum.ml.depends
# Target: ImpSimple.ml.depends, tags: { extension:ml, file:ImpSimple.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules ImpSimple.ml > ImpSimple.ml.depends
# Target: NewClientImp.ml.depends, tags: { extension:ml, file:NewClientImp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewClientImp.ml > NewClientImp.ml.depends
# Target: NewEchoImp.ml.depends, tags: { extension:ml, file:NewEchoImp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewEchoImp.ml > NewEchoImp.ml.depends
# Target: NewEchoMainImp.ml.depends, tags: { extension:ml, file:NewEchoMainImp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewEchoMainImp.ml > NewEchoMainImp.ml.depends
# Target: NewStackImp.ml.depends, tags: { extension:ml, file:NewStackImp.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules NewStackImp.ml > NewStackImp.ml.depends
# Target: CompCert/backend/PrintAsm.ml.depends, tags: { extension:ml, file:CompCert/backend/PrintAsm.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/PrintAsm.ml > CompCert/backend/PrintAsm.ml.depends
# Target: CompCert/debug/DwarfPrinter.ml.depends, tags: { extension:ml, file:CompCert/debug/DwarfPrinter.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/debug/DwarfPrinter.ml > CompCert/debug/DwarfPrinter.ml.depends
# Target: CompCert/debug/DwarfPrinter.mli.depends, tags: { extension:mli, file:CompCert/debug/DwarfPrinter.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/debug/DwarfPrinter.mli > CompCert/debug/DwarfPrinter.mli.depends
# Target: CompCert/debug/DwarfPrinter.cmi, tags: { byte, compile, extension:mli, file:CompCert/debug/DwarfPrinter.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/DwarfPrinter.cmi CompCert/debug/DwarfPrinter.mli
# Target: CompCert/debug/DwarfUtil.ml.depends, tags: { extension:ml, file:CompCert/debug/DwarfUtil.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/debug/DwarfUtil.ml > CompCert/debug/DwarfUtil.ml.depends
# Target: CompCert/debug/DwarfUtil.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/debug/DwarfUtil.cmo, file:CompCert/debug/DwarfUtil.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/DwarfUtil.cmo CompCert/debug/DwarfUtil.ml
# Target: CompCert/debug/DwarfUtil.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/debug/DwarfUtil.cmx, file:CompCert/debug/DwarfUtil.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/DwarfUtil.cmx CompCert/debug/DwarfUtil.ml
# Target: CompCert/backend/Fileinfo.ml.depends, tags: { extension:ml, file:CompCert/backend/Fileinfo.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/backend/Fileinfo.ml > CompCert/backend/Fileinfo.ml.depends
# Target: CompCert/lib/Printlines.mli.depends, tags: { extension:mli, file:CompCert/lib/Printlines.mli, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Printlines.mli > CompCert/lib/Printlines.mli.depends
# Target: CompCert/lib/Printlines.cmi, tags: { byte, compile, extension:mli, file:CompCert/lib/Printlines.mli, interf, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Printlines.cmi CompCert/lib/Printlines.mli
# Target: CompCert/backend/Fileinfo.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/backend/Fileinfo.cmo, file:CompCert/backend/Fileinfo.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Fileinfo.cmo CompCert/backend/Fileinfo.ml
# Target: CompCert/lib/Printlines.ml.depends, tags: { extension:ml, file:CompCert/lib/Printlines.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/lib/Printlines.ml > CompCert/lib/Printlines.ml.depends
# Target: CompCert/lib/Printlines.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/lib/Printlines.cmx, file:CompCert/lib/Printlines.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/lib -I CompCert/driver -I CompCert/common -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/lib/Printlines.cmx CompCert/lib/Printlines.ml
# Target: CompCert/x86/TargetPrinter.ml.depends, tags: { extension:ml, file:CompCert/x86/TargetPrinter.ml, ocaml, ocamldep, quiet, traverse }
ocamldep.opt -modules CompCert/x86/TargetPrinter.ml > CompCert/x86/TargetPrinter.ml.depends
# Target: CompCert/x86/TargetPrinter.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:CompCert/x86/TargetPrinter.cmo, file:CompCert/x86/TargetPrinter.ml, implem, ocaml, quiet, traverse }
ocamlc.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/TargetPrinter.cmo CompCert/x86/TargetPrinter.ml
# Target: CompCert/backend/Fileinfo.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/Fileinfo.cmx, file:CompCert/backend/Fileinfo.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/Fileinfo.cmx CompCert/backend/Fileinfo.ml
# Target: CompCert/debug/DwarfPrinter.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/debug/DwarfPrinter.cmx, file:CompCert/debug/DwarfPrinter.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/debug -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/debug/DwarfPrinter.cmx CompCert/debug/DwarfPrinter.ml
# Target: CompCert/x86/TargetPrinter.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/x86/TargetPrinter.cmx, file:CompCert/x86/TargetPrinter.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/TargetPrinter.cmx CompCert/x86/TargetPrinter.ml
# Target: CompCert/x86/Asmexpand.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/x86/Asmexpand.cmx, file:CompCert/x86/Asmexpand.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/x86 -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/backend -o CompCert/x86/Asmexpand.cmx CompCert/x86/Asmexpand.ml
# Target: CompCert/driver/Driveraux.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/driver/Driveraux.cmx, file:CompCert/driver/Driveraux.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o CompCert/driver/Driveraux.cmx CompCert/driver/Driveraux.ml
# Target: Imp2Asm.cmx, tags: { compile, extension:cmx, extension:ml, file:Imp2Asm.cmx, file:Imp2Asm.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o Imp2Asm.cmx Imp2Asm.ml
# Target: ImpFactorial.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpFactorial.cmx, file:ImpFactorial.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpFactorial.cmx ImpFactorial.ml
# Target: ImpKnot.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpKnot.cmx, file:ImpKnot.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpKnot.cmx ImpKnot.ml
# Target: ImpLink.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpLink.cmx, file:ImpLink.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpLink.cmx ImpLink.ml
# Target: ImpMem1.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpMem1.cmx, file:ImpMem1.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpMem1.cmx ImpMem1.ml
# Target: ImpMem2.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpMem2.cmx, file:ImpMem2.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpMem2.cmx ImpMem2.ml
# Target: ImpMutsum.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpMutsum.cmx, file:ImpMutsum.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpMutsum.cmx ImpMutsum.ml
# Target: ImpSimple.cmx, tags: { compile, extension:cmx, extension:ml, file:ImpSimple.cmx, file:ImpSimple.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o ImpSimple.cmx ImpSimple.ml
# Target: NewClientImp.cmx, tags: { compile, extension:cmx, extension:ml, file:NewClientImp.cmx, file:NewClientImp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewClientImp.cmx NewClientImp.ml
# Target: NewEchoImp.cmx, tags: { compile, extension:cmx, extension:ml, file:NewEchoImp.cmx, file:NewEchoImp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewEchoImp.cmx NewEchoImp.ml
# Target: NewEchoMainImp.cmx, tags: { compile, extension:cmx, extension:ml, file:NewEchoMainImp.cmx, file:NewEchoMainImp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewEchoMainImp.cmx NewEchoMainImp.ml
# Target: NewStackImp.cmx, tags: { compile, extension:cmx, extension:ml, file:NewStackImp.cmx, file:NewStackImp.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o NewStackImp.cmx NewStackImp.ml
# Target: CompCert/backend/PrintAsm.cmx, tags: { compile, extension:cmx, extension:ml, file:CompCert/backend/PrintAsm.cmx, file:CompCert/backend/PrintAsm.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/backend -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -o CompCert/backend/PrintAsm.cmx CompCert/backend/PrintAsm.ml
# Target: test.cmx, tags: { compile, extension:cmx, extension:ml, file:test.cmx, file:test.ml, implem, native, ocaml, quiet, traverse }
ocamlopt.opt -c -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml -I CompCert/driver -I CompCert/common -I CompCert/lib -I CompCert/cparser -I CompCert/debug -I CompCert/cfrontend -I CompCert/x86 -I CompCert/backend -o test.cmx test.ml
# Target: test.native, tags: { dont_link_with, extension:native, file:test.native, link, native, ocaml, program, quiet, traverse }
ocamlopt.opt -I /home/ldj/.opam/default/lib/menhirLib -I /home/ldj/.opam/default/lib/ocaml /home/ldj/.opam/default/lib/ocaml/unix.cmxa /home/ldj/.opam/default/lib/ocaml/str.cmxa /home/ldj/.opam/default/lib/menhirLib/menhirLib.cmxa -I CompCert/lib -I CompCert/driver -I CompCert/cparser -I CompCert/backend -I CompCert/common -I CompCert/x86 -I CompCert/debug -I CompCert/cfrontend BinNums.cmx Coqlib0.cmx RelDec.cmx String0.cmx AList.cmx CompCert/lib/Responsefile.cmx CompCert/lib/Commandline.cmx CompCert/lib/Readconfig.cmx CompCert/driver/Configuration.cmx Datatypes.cmx Archi.cmx BinPosDef.cmx Nat.cmx BinPos.cmx BinNat.cmx BinInt.cmx Bool.cmx SpecFloat.cmx Zbool.cmx Bracket.cmx FLT.cmx Round.cmx Zaux.cmx Zpower.cmx Binary.cmx Bits.cmx List0.cmx ZArith_dec.cmx Coqlib.cmx EquivDec.cmx Errors.cmx IEEE754_extra.cmx Zbits.cmx Integers.cmx Floats.cmx Maps.cmx AST.cmx BoolEqual.cmx CompCert/cparser/Cprint.cmx CompCert/driver/Version.cmx CompCert/cparser/Diagnostics.cmx CompCert/cparser/Env.cmx CompCert/cparser/Machine.cmx CompCert/cparser/Cutil.cmx CompCert/lib/Camlcoq.cmx PeanoNat.cmx Values.cmx Memdata.cmx CompCert/backend/AisAnnot.cmx Op.cmx Machregs.cmx CompCert/backend/Machregsnames.cmx Int0.cmx Orders.cmx OrdersTac.cmx OrdersFacts.cmx MSetInterface.cmx MSetAVL.cmx OrderedType.cmx OrdersAlt.cmx FSetAVL.cmx Ordered.cmx Locations.cmx Registers.cmx CompCert/backend/XTL.cmx CompCert/common/PrintAST.cmx CompCert/x86/PrintOp.cmx CompCert/backend/PrintXTL.cmx CompCert/driver/Clflags.cmx CompCert/common/Sections.cmx CompCert/cparser/Ceval.cmx CompCert/x86/CBuiltins.cmx CompCert/x86/Machregsaux.cmx CompCert/cparser/ExtendedAsm.cmx CompCert/debug/Debug.cmx Ctypes.cmx Memtype.cmx Znumtheory.cmx Memory.cmx Cop.cmx Csyntax.cmx Ring.cmx Ctyping.cmx Initializers.cmx CompCert/cfrontend/C2C.cmx CompCert/lib/Tokenize.cmx Conventions1.cmx CompCert/cfrontend/CPragmas.cmx CompCert/backend/IRC.cmx LTL.cmx CompCert/backend/PrintLTL.cmx Equalities.cmx DecidableType.cmx FSetInterface.cmx Heaps.cmx Specif.cmx Iteration.cmx Lattice.cmx Kildall.cmx RTL.cmx CompCert/backend/Splitting.cmx Conventions.cmx Unityping.cmx RTLtyping.cmx CompCert/backend/Regalloc.cmx FSetAVLplus.cmx Allocation.cmx Asm.cmx Mach.cmx Asmgen.cmx Linear.cmx Bounds.cmx Builtins0.cmx Builtins1.cmx Builtins.cmx CSEdomain.cmx CombineOp.cmx Compopts.cmx Liveness.cmx ValueDomain.cmx ValueAOp.cmx ValueAnalysis.cmx CSE.cmx CleanupLabels.cmx Clight.cmx Cminor.cmx Compare_dec.cmx CminorSel.cmx Csharpminor.cmx Mergesort.cmx Cminorgen.cmx Cminortyping.cmx CompCert/backend/Asmexpandaux.cmx CompCert/lib/Printlines.cmx CompCert/backend/Fileinfo.cmx CompCert/backend/Inliningaux.cmx CompCert/backend/Linearizeaux.cmx CompCert/backend/PrintAsmaux.cmx CompCert/cfrontend/PrintCsyntax.cmx CompCert/debug/DwarfUtil.cmx CompCert/debug/DwarfPrinter.cmx CompCert/x86/TargetPrinter.cmx CompCert/backend/PrintAsm.cmx CompCert/backend/PrintCminor.cmx CompCert/backend/PrintMach.cmx CompCert/backend/PrintRTL.cmx CompCert/backend/RTLgenaux.cmx CompCert/backend/Selectionaux.cmx CompCert/cfrontend/PrintClight.cmx Switch.cmx CompCert/common/Switchaux.cmx CompCert/driver/Driveraux.cmx CompCert/driver/Timing.cmx CompCert/x86/Asmexpand.cmx SelectOp.cmx ConstpropOp.cmx Constprop.cmx Cshmgen.cmx IntvSets.cmx NeedDomain.cmx NeedOp.cmx Deadcode.cmx Debugvar.cmx Inlining.cmx Linearize.cmx Lineartyping.cmx Postorder.cmx RTLgen.cmx Renumber.cmx SplitLong.cmx SelectLong.cmx SelectDiv.cmx Selection.cmx SimplLocals.cmx Stacklayout.cmx Stacking.cmx Tailcall.cmx UnionFind.cmx Tunneling.cmx Unusedglob.cmx Compiler.cmx Csharpminor2Asm.cmx Skeleton.cmx Imp.cmx Imp2Csharpminor.cmx Imp2Asm.cmx ImpNotations.cmx ImpFactorial.cmx ImpKnot.cmx ImpLink.cmx ImpMem1.cmx ImpMem2.cmx ImpMutsum.cmx ImpSimple.cmx NewClientImp.cmx NewEchoImp.cmx NewEchoMainImp.cmx NewStackImp.cmx test.cmx -o test.native
# Compilation successful.
